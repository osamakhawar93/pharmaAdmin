{"version":3,"file":"17.chunk.js","sources":["webpack:///./src/app/GetPopularChemist/GetPopularChemist.component.ts","webpack:///./src/app/GetPopularChemist/GetPopularChemist.module.ts","webpack:///./src/app/GetPopularChemist/GetPopularChemist.style.scss","webpack:///./src/app/GetPopularChemist/GetPopularChemist.template.html","webpack:///./src/app/services/AddAreaService.ts","webpack:///./src/app/services/AddchemistService.ts","webpack:///./src/app/services/GetChemistDataService.ts","webpack:///./src/app/services/GetPopularChemistService.ts","webpack:///./src/app/services/ServiceUrl.ts?af2c****"],"sourcesContent":["import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AddAreaService } from './../services/AddAreaService';\r\nimport { AddCategoryService } from './../services/AddCategoryService';\r\nimport { GetChemistDataService } from './../services/GetChemistDataService';\r\nimport { AddchemistService } from './../services/AddchemistService';\r\nimport {GetPopularChemistService} from './../services/GetPopularChemistService';\r\nimport { GetChemistDataModel} from './../models/GetChemistDataModel';\r\nimport { GetAllCitiesModel} from './../models/GetAllCitiesModel';\r\nimport { categoryModel} from './../models/categoryModel';\r\nimport { chemistModel} from './../models/chemistModel';\r\nimport {GetAreaNameModel} from './../models/GetAreaNameModel';\r\nimport{GetPopularChemistModel} from './../models/GetPopularChemistModel';\r\n\r\ndeclare var jQuery:any;\r\n@Component({\r\n  selector: 'GetPopularChemist',\r\n  providers: [GetPopularChemistService,AddchemistService,GetChemistDataService,AddAreaService],\r\n  styles: [ require('./GetPopularChemist.style.scss') ],\r\n  template: require('./GetPopularChemist.template.html'),\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    class: 'chemist-page app'\r\n  },\r\n})\r\n\r\nexport class GetPopularChemistComponent {\r\n  router: Router;\r\n  public SingleChemistDataModel:GetChemistDataModel[]=[];\r\n  public UserType:any;\r\n  public GetAllCitiesModelArray:GetAllCitiesModel[]=[];\r\n  public ChemistObject:GetChemistDataModel[];\r\n  public unconfirmedChemist:chemistModel;\r\n  public GetAreaNameModelArray:GetAreaNameModel[]=[];\r\n  public GetPopularChemistModelArray:GetPopularChemistModel[]=[];\r\n  public ChemistName:any;\r\n  public GetChemistId:any;\r\n  public tempObj:any;\r\n  public Address:any;\r\n  public CityId:any;\r\n  public FullName:any;\r\n  public ChemistId:any;\r\n  public ChemistEmail:any;\r\n  public ChemistPassword:any;\r\n  public Longitude:any;\r\n  public RegularExpression :any;\r\n  public Latitude:any;\r\n  public PharmacyId:any;\r\n  public City:any;\r\n  public ProductType:any;\r\n  public getArea_Id:any;\r\n\r\n  constructor(public _getPopularChemistService:GetPopularChemistService, _AddAreaNameService:AddAreaService ,public _addChemistServiceService:AddchemistService,public _getChemistDataService:GetChemistDataService, router: Router) {\r\n    this.UserType=localStorage.getItem(\"UserType\");\r\n    if(this.UserType==null)\r\n    {\r\n      this.router.navigate([\"/app/login\"]);\r\n    \r\n    }\r\n    else{\r\n    this.router = router;\r\n   // this.SingleChemistDataModel.Chemist.PharmacyName=this.ChemistName;\r\n   this.GetChemistId=localStorage.getItem(\"GetChemistId\");\r\n   this.ProductType=100;\r\n   this._getPopularChemistService.GetPopularChemist().subscribe(\r\n       response => {\r\n         \r\n        this.GetPopularChemistModelArray=response.data;\r\n         console.log('Chemist name',this.GetPopularChemistModelArray);\r\n\r\n         jQuery(\"#snackbar1\").html(response.message);\r\n         this.myFunction();\r\n this.getAllCities()\r\n \r\n       });  \r\n      }\r\n  \r\n  }\r\n\r\n  getAllCities()\r\n  {\r\n    \r\n    this._getChemistDataService.GetAllCitiesService().subscribe(\r\n      response => {\r\n       this.GetAllCitiesModelArray=response.data;\r\n        console.log(this.GetAllCitiesModelArray);\r\n\r\n        jQuery(\"#snackbar1\").html(response.message);\r\n        this.myFunction();\r\n     \r\n      });  \r\n\r\n  }\r\n  getAreaId(AreaId)\r\n  {\r\nthis.getArea_Id=AreaId;\r\n  }\r\n  \r\n  getCityName(cityId)\r\n  {\r\n \r\n  }\r\n  getPharmacyId(PharmacyID)\r\n{\r\nthis.PharmacyId=PharmacyID;\r\nconsole.log(this.PharmacyId);\r\nvar obj = this.SingleChemistDataModel.find(x =>x.ChemistId == this.PharmacyId);\r\nthis.GetChemistId=obj.Chemist.Id;\r\n\r\nlocalStorage.setItem(\"GetChemistId\",obj.ChemistId.toString());\r\nthis.GetChemistId=localStorage.getItem(\"GetChemistId\");\r\n\r\nthis.Address=obj.Chemist.Address;\r\nthis.FullName=obj.FullName;\r\nconsole.log(obj);\r\nconsole.log(this.Address);\r\nconsole.log(this.FullName);\r\n}\r\n  ngOnInit(): void {\r\n    \r\n\r\n    setTimeout(function () {\r\n\r\n\r\n      jQuery('#somecomponent').locationpicker({\r\n        location: {\r\n          latitude: \t30.3753,\r\n          longitude: 69.3451\r\n        },\r\n        radius: 300,\r\n        inputBinding: {\r\n          latitudeInput: jQuery('#us7-lat'),\r\n          longitudeInput: jQuery('#us7-lon'),\r\n          radiusInput: jQuery('#us7-radius'),\r\n          locationNameInput: jQuery('#us7-address'),\r\n        },\r\n        enableAutocomplete: true\r\n      });\r\n    }, 3000);\r\n   \r\n  }\r\n\r\n  addChemist()\r\n  { \r\n   \r\n    this.Longitude=jQuery(\"#us7-lon\").val();\r\n    this.Latitude=jQuery(\"#us7-lat\").val();\r\n    console.log(this.Longitude);\r\n\r\n    if(!this.ChemistEmail || !this.ChemistName || !this.ChemistPassword || !this.Longitude || !this.Latitude)\r\n    {\r\n      //alert(\"empty\");\r\n   \r\n       jQuery(\"#snackbar1\").html(\"Please enter Empty field\");\r\n      this.myFunction();  \r\n\r\n    }\r\n    else\r\n    {\r\n      \r\nthis.RegularExpression=/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n      if(this.RegularExpression.test(this.ChemistEmail))\r\n      {\r\n        this.Longitude=jQuery(\"#us7-lon\").val();\r\n        this.Latitude=jQuery(\"#us7-lat\").val();\r\n      this.ChemistId=localStorage.getItem(\"GetChemistId\")\r\n      console.log(this.ChemistId);\r\n     this._addChemistServiceService.AddChemist(this.getArea_Id,this.ChemistEmail, this.CityId,this.ChemistName,this.ChemistPassword,this.Longitude,this.Latitude,this.PharmacyId).subscribe(\r\n    response => {\r\n     console.log(response.data);\r\n     jQuery(\"#snackbar1\").html(\"Add Chemist Successfully\");\r\n     this.myFunction();\r\n\r\n    }); \r\n  }\r\n  else\r\n  {\r\n    jQuery(\"#snackbar1\").html(\"Email is not Valid\");\r\n    this.myFunction();\r\n\r\n  }\r\n  }\r\n  }\r\n  myFunction() {\r\n    // Get the snackbar DIV\r\n    var x = document.getElementById(\"snackbar1\")\r\n\r\n    // Add the \"show\" class to DIV\r\n    x.className = \"show\";\r\n\r\n    // After 3 seconds, remove the show class from DIV\r\n    setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n  \r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/GetPopularChemist/GetPopularChemist.component.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { GetPopularChemistComponent } from './GetPopularChemist.component';\r\nimport \"jquery-locationpicker/src/locationpicker.jquery\";\r\n\r\nexport const routes = [\r\n  { path: '', component: GetPopularChemistComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GetPopularChemistComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes),\r\n    \r\n  ]\r\n})\r\nexport default class GetPopularChemistModule {\r\n  static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/GetPopularChemist/GetPopularChemist.module.ts","module.exports = \".login-page {\\n  background-color: #ddd; }\\n\\n.login-page .page-footer {\\n  margin-bottom: 25px;\\n  font-size: 13px;\\n  color: #818a91;\\n  text-align: center; }\\n  @media (min-height: 600px) {\\n    .login-page .page-footer {\\n      position: absolute;\\n      bottom: 0;\\n      left: 0;\\n      right: 0; } }\\n\\n#PharmacyName {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 100%;\\n  margin-bottom: 14px; }\\n\\n#us7-lat {\\n  width: 237px; }\\n\\n#us7-lon {\\n  width: 237px; }\\n\\n#us7-radius {\\n  width: 260px; }\\n\\n#us7-address {\\n  width: 260px; }\\n\\n#measurementName {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 100%;\\n  margin-bottom: 14px; }\\n\\n.addbtn {\\n  width: 235px;\\n  color: white !important; }\\n\\n.widget-login-container {\\n  padding-top: 10%; }\\n\\n.widget-login-logo {\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n  text-align: center;\\n  font-weight: 400; }\\n  .widget-login-logo .fa-circle {\\n    font-size: 13px;\\n    margin: 0 20px; }\\n\\n.widget-login {\\n  padding: 30px; }\\n  .widget-login > header h1, .widget-login > header h2, .widget-login > header h3, .widget-login > header h4, .widget-login > header h5, .widget-login > header h6 {\\n    font-weight: 400;\\n    text-align: center; }\\n\\n.widget-login-info {\\n  font-size: 13px;\\n  color: #888;\\n  margin-top: 1px;\\n  margin-bottom: 0;\\n  text-align: center; }\\n  .widget-login-info.abc-checkbox {\\n    margin-left: -25px; }\\n\\n.login-form .form-control {\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef; }\\n  .login-form .form-control:focus {\\n    background-color: #ddd; }\\n\\n#snackbar1 {\\n  visibility: hidden;\\n  /* Hidden by default. Visible on click */\\n  min-width: 250px;\\n  /* Set a default minimum width */\\n  margin-left: -125px;\\n  /* Divide value of min-width by 2 */\\n  background-color: #333;\\n  /* Black background color */\\n  color: #fff;\\n  /* White text color */\\n  text-align: center;\\n  /* Centered text */\\n  border-radius: 2px;\\n  /* Rounded borders */\\n  padding: 16px;\\n  /* Padding */\\n  position: fixed;\\n  /* Sit on top of the screen */\\n  z-index: 1;\\n  /* Add a z-index if needed */\\n  left: 50%;\\n  /* Center the snackbar */\\n  bottom: 30px;\\n  /* 30px from the bottom */ }\\n\\nagm-map {\\n  height: 300px; }\\n\\n.AddDosage {\\n  width: 297px; }\\n\\n.AddSize {\\n  width: 327px; }\\n\\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\\n#snackbar1.show {\\n  visibility: visible;\\n  /* Show the snackbar */\\n  /* Add animation: Take 0.5 seconds to fade in and out the snackbar. \\r\\nHowever, delay the fade out process for 2.5 seconds */\\n  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\\n  animation: fadein 0.5s, fadeout 0.5s 2.5s; }\\n\\n/* Animations to fade the snackbar in and out */\\n@-webkit-keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0; }\\n  to {\\n    bottom: 30px;\\n    opacity: 1; } }\\n\\n@keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0; }\\n  to {\\n    bottom: 30px;\\n    opacity: 1; } }\\n\\n@-webkit-keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1; }\\n  to {\\n    bottom: 0;\\n    opacity: 0; } }\\n\\n@keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1; }\\n  to {\\n    bottom: 0;\\n    opacity: 0; } }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/GetPopularChemist/GetPopularChemist.style.scss\n// module id = ./src/app/GetPopularChemist/GetPopularChemist.style.scss\n// module chunks = 17","module.exports = \"<div id=\\\"snackbar1\\\"></div>\\r\\n<div class=\\\"row\\\">\\r\\n<div class=\\\"container\\\">\\r\\n  <main id=\\\"content\\\" class=\\\"widget-login-container\\\" role=\\\"main\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-3 col-md-5\\\">\\r\\n        <h5 class=\\\"widget-login-logo animated  fadeInUp\\\">\\r\\n\\r\\n        </h5>\\r\\n        <section class=\\\"widget widget-login  AddSize animated fadeInUp\\\">\\r\\n          <header>\\r\\n            <h3 style=\\\"text-transform:uppercase;\\\">Popular Chemist</h3>\\r\\n          </header>\\r\\n          <div class=\\\"widget-body\\\">\\r\\n            <p class=\\\"widget-login-info\\\">\\r\\n             \\r\\n            </p>\\r\\n            <p class=\\\"widget-login-info\\\">\\r\\n           \\r\\n            </p>\\r\\n            \\r\\n            <form class=\\\"login-form mt-lg\\\">\\r\\n         \\r\\n                <table class=\\\"table table-hover\\\">\\r\\n                    \\r\\n                                  <tr>\\r\\n                    \\r\\n                                    <td>Name</td>\\r\\n                                    <td>Address</td>\\r\\n                                    <td>City Name</td>\\r\\n                                  </tr>\\r\\n                    \\r\\n                                  <ng-container *ngFor=\\\" let row1 of GetPopularChemistModelArray\\\">\\r\\n                                    <tr>\\r\\n                                      <td>{{row1.Chemist.PharmacyName}}</td>\\r\\n                                      <td>{{row1.Chemist.Address}}</td>\\r\\n                                      <td>{{row1.Chemist.City.Name}}</td>\\r\\n                    \\r\\n                    \\r\\n                    \\r\\n                                    </tr>\\r\\n                    \\r\\n                                    <!-- <td > {{row2.User.UserName}}</td>\\r\\n                                            <td>{{row2.Chemist.City}}</td>\\r\\n                                            <td>{{row22.Chemist.Latitude}}</td> -->\\r\\n                    \\r\\n                    \\r\\n                                  </ng-container>\\r\\n                                  </table>\\r\\n \\r\\n              <div class=\\\"clearfix\\\">\\r\\n               \\r\\n              </div>\\r\\n              <div class=\\\"row m-t-1\\\">\\r\\n                <div class=\\\"col-md-6 push-md-6\\\">\\r\\n                  <div class=\\\"clearfix\\\">\\r\\n                   <!--  <div class=\\\"abc-checkbox widget-login-info pull-xs-right\\\">\\r\\n                      <input type=\\\"checkbox\\\" id=\\\"checkbox1\\\" value=\\\"1\\\">\\r\\n                      <label for=\\\"checkbox1\\\">Keep me signed in </label>\\r\\n                    </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n               <!--  <div class=\\\"col-md-6 pull-md-6\\\">\\r\\n                  <a class=\\\"mr-n-lg\\\" href=\\\"#\\\">Trouble with account?</a>\\r\\n                </div> -->\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </section>\\r\\n      </div>\\r\\n\\r\\n     \\r\\n  \\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      \\r\\n    </div>\\r\\n  </main>\\r\\n <!--  <footer class=\\\"page-footer\\\">\\r\\n    2016 &copy; Sing. Admin Dashboard Template.\\r\\n  </footer> -->\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/GetPopularChemist/GetPopularChemist.template.html\n// module id = ./src/app/GetPopularChemist/GetPopularChemist.template.html\n// module chunks = 17","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class AddAreaService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    addArea(cityId,AreaName) {\r\n        let body = JSON.stringify({CityId:cityId,AreaName:AreaName});\r\n        console.log(body);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'post', headers: headers });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"City/addArea\", body, options)\r\n            .map(res => res.json());\r\n    }\r\n  getAreaName(CityId)\r\n  {\r\n  \r\n        let body = JSON.stringify({});\r\n        console.log(body);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"City/getAllAreasByCityId?CityId=\"+CityId, options)\r\n            .map(res => res.json());\r\n\r\n  }\r\n\r\n  \r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/AddAreaService.ts","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class AddchemistService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    AddChemist(getArea_Id,ChemistEmail,PharmaCommission,CityId,ChemistName,ChemistPassword,Longitude,latitide,ChemistId)\r\n    {\r\n        let body = JSON.stringify({ PharmaCommission:PharmaCommission,AreaId:getArea_Id,Email: ChemistEmail,CityId:CityId, Password: ChemistPassword,UserName: ChemistName,Longitude: Longitude,Latitude: latitide,ChemistId: ChemistId});\r\n        console.log(body);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'post', headers: headers });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"User/addChemistDetail\", body, options)\r\n            .map(res => res.json());\r\n    }\r\n  \r\n \r\n   \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/AddchemistService.ts","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class GetChemistDataService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    GetRegisteredChemistService()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllChemists?webRequest=1\", options)\r\n            .map(res => {\r\n                console.log(res.json());\r\n                return res.json();\r\n            });\r\n            }\r\n            getSubCategoryService()\r\n            {\r\n                let body = JSON.stringify({});\r\n                let headers = new Headers({ 'Content-Type': 'application/json' });\r\n                let options = new RequestOptions({ method: 'get', headers: headers });\r\n        \r\n                return this.http.get(this.urlService.baseUrl + \"Chemist/getSubCategoriesByChemistIdByCategoryId?chemistId=1&categoryId=1\", options)\r\n                    .map(res => {\r\n                        console.log(res.json());\r\n                        return res.json();\r\n                    });\r\n              \r\n              \r\n            }\r\n    getDataByAreaIdService(AreadId)\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getChemistsListByArea?areaId\"+AreadId, options)\r\n            .map(res => {\r\n                console.log(res.json());\r\n                return res.json();\r\n            });\r\n\r\n\r\n    }\r\n  \r\n    GetChemistService()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getListOfPendingChemists\", options)\r\n            .map(res => {\r\n                console.log(res.json());\r\n                return res.json();\r\n            });\r\n\r\n\r\n    }\r\n    GetAllCitiesService()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"City/getAllCities\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    getDataByCities(cityId)\r\n    {\r\n        \r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getChemistsListByCity?CityId=\"+cityId, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n\r\n    \r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/GetChemistDataService.ts","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class GetPopularChemistService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n  \r\n    GetPopularChemist()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getPopularChemists\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n   \r\n    \r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/GetPopularChemistService.ts","import { Injectable, Inject } from '@angular/core';\nexport class ServiceUrl {\n   public baseUrl: string = \"https://pharmaappnew.azurewebsites.net/api/\";\n/*    public baseUrl:string = \"http://localhost:5000/\";*/\n/* public baseUrl: string = \"http://104.199.49.55:3000/\";*/\n    constructor() {\n\n    }\n    getUrl() {\n        return this.baseUrl;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/ServiceUrl.ts"],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAoBA;AA0BA;AA1BA;AA0BA;AAAA;AAAA;AAxBA;AAEA;AAGA;AACA;AAmjLA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA8KA;;AAAA;AA5KA;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAaA;AAAA;AAEA;AADA;AAZA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAAA;AAGA;AAAA;AAFA;AAEA;;;;;;;;ACzBA;;;;;;;ACAA;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AA1BA;AAAA;;AAAA;AA8BA;;AAAA;AA7BA;;;;;;;;;;ACLA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAfA;AAAA;;AAAA;AAmBA;;AAAA;AAlBA;;;;;;;;;;ACLA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AAlFA;AAAA;;AAAA;AAsFA;;AAAA;AArFA;;;;;;;;;;ACLA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAjBA;AAAA;;AAAA;AAqBA;;AAAA;AApBA;;;;;;;;;;ACJA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;","sourceRoot":""}