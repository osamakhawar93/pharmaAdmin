{"version":3,"file":"13.chunk.js","sources":["webpack:///./src/app/UpdateOrderStatus/UpdateOrderStatus.component.ts","webpack:///./src/app/UpdateOrderStatus/UpdateOrderStatus.module.ts","webpack:///./src/app/UpdateOrderStatus/UpdateOrderStatus.style.scss","webpack:///./src/app/UpdateOrderStatus/UpdateOrderStatus.template.html","webpack:///./src/app/services/GetLaugisticService.ts","webpack:///./src/app/services/GetOrderService.ts","webpack:///./src/app/services/PendingOrderService.ts","webpack:///./src/app/services/ServiceUrl.ts?08bc*","webpack:///./src/app/services/UpdateOrderStatusService.ts"],"sourcesContent":["import { Component, ViewEncapsulation } from '@angular/core';\nimport { GetLaugisticService } from '../services/GetLaugisticService';\nimport { GetOrderService } from '../services/GetOrderService';\nimport { PendingOrderService } from '../services/PendingOrderService';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { GetLaugisticModel } from '../models/GetLaugisticModel';\nimport { GetAllProductModel } from '../models/GetAllProductModel';\nimport { UpdateOrderStatusService } from '../services/UpdateOrderStatusService';\nimport { GetOrderDetailModel } from '../models/GetOrderDetailModel';\n\n\n@Component({\n  selector: 'UpdateOrderStatus',\n  styles: [require('./UpdateOrderStatus.style.scss')],\n  template: require('./UpdateOrderStatus.template.html'),\n  providers: [GetLaugisticService, PendingOrderService, GetOrderService, UpdateOrderStatusService],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'login-page app'\n  }\n})\nexport class UpdateOrderStatusComponent {\n  public isAdmin: boolean;\n  public UserType:any;\n  public isChemist: boolean;\n  public GetOrderDetailModelArray: GetOrderDetailModel[] = [];\n  public GetAllProductModelArray: GetOrderDetailModel[] = [];\n  public GetLaugisticModelArray: GetLaugisticModel[] = [];\n  public GetLaugisticModeldata: GetLaugisticModel[] = [];\n  public username: string;\n  public fullName: any;\n  public Chemistusername: any;\n  public Chemistpassword: any;\n  public password: string;\n  public router: Router;\n  public AdminUserType: any;\n  public ChemistUserType: any;\n  public Lougistic_Id: any;\n  public Order_Id: any;\n  public Status_Name: any;\n  public OrderStatus_Id: any;\n  public PendingOrderServiceArray: PendingOrderService[] = [];\n  public PENDING:any;\n  public ONTHEWAY :any;\n  public DELIVERED :any;\n  public CONFIRMED :any;\n  public SHIPPED :any;\n  public NOTSHIPPED :any;\n  public CANCELED :any;\n  public COMPLETED :any;\n  public RETURNED :any;\n  public TOBEDELIVERED :any;\n\n\n  constructor(public _UpdateOrderStatusService: UpdateOrderStatusService, public _getLaugisticService: GetLaugisticService, public _getPendingOrderService: PendingOrderService, public _getOrderService: GetOrderService, router: Router, ) {\n    this.UserType=localStorage.getItem(\"UserType\");\n    if(this.UserType==null)\n    {\n      this.router.navigate([\"/app/login\"]);\n    \n    }\n    else\n    {\n    this.router = router;\n  }\n}\n  getStatusCategory(StatusName) {\n    this.Status_Name = StatusName;\n    console.log(StatusName);\n    this.PENDING = \"pending\";\n    this.ONTHEWAY = \"On The way\";\n    this.DELIVERED = \"Delivered\";\n    this.CONFIRMED = \"Confirmed\";\n    this.SHIPPED = \"Shipped\";\n    this.NOTSHIPPED = \"Not Shipped\";\n    this.CANCELED = \"Canceled\";\n    this.COMPLETED = \"Completed\";\n    this.RETURNED = \"Returned\";\n    this.TOBEDELIVERED = \"To Be Delivered\";\n  \n \n  this.username = undefined;\n  this.password = undefined;\n\n  this._getOrderService.GetOrderDetailService(this.Status_Name).subscribe(\n    response => {\n      console.log(response.data);\n      this.GetAllProductModelArray = response.data;\n\n      jQuery(\"#snackbar\").html(response.message);\n      this.myFunction();\n      for (var i = 0; i < response.data.length; i++) {\n        if (this.GetAllProductModelArray[i].OrderStatus == 100) {\n\n          this.GetAllProductModelArray[i].OrderStatus =this.PENDING;\n\n        }\n        else if (this.GetAllProductModelArray[i].OrderStatus == 200) {\n\n          this.GetAllProductModelArray[i].OrderStatus = this.ONTHEWAY;\n\n        }\n        else if (this.GetAllProductModelArray[i].OrderStatus == 300) {\n          this.GetAllProductModelArray[i].OrderStatus = this.DELIVERED;\n\n        }\n        else if (this.GetAllProductModelArray[i].OrderStatus == 400) {\n\n          this.GetAllProductModelArray[i].OrderStatus = this.CONFIRMED;\n\n        }\n        else if (this.GetAllProductModelArray[i].OrderStatus == 500) {\n\n          this.GetAllProductModelArray[i].OrderStatus = this.SHIPPED;\n\n        }\n        else if (this.GetAllProductModelArray[i].OrderStatus == 600) {\n\n          this.GetAllProductModelArray[i].OrderStatus = this.NOTSHIPPED;\n\n        }\n        else if (this.GetAllProductModelArray[i].OrderStatus == 700) {\n\n          this.GetAllProductModelArray[i].OrderStatus = this.CANCELED;\n\n        }\n        else if (this.GetAllProductModelArray[i].OrderStatus == 800) {\n          this.GetAllProductModelArray[i].OrderStatus = this.COMPLETED;\n        }\n        else if (this.GetAllProductModelArray[i].OrderStatus == 900) {\n\n          this.GetAllProductModelArray[i].OrderStatus = this.RETURNED;\n\n        }\n        else if (this.GetAllProductModelArray[i].OrderStatus == 10) {\n\n          this.GetAllProductModelArray[i].OrderStatus = this.TOBEDELIVERED;\n\n        }\n        else {\n\n          alert(\"Not Available\");\n        }\n      }\n\n    });\n\n\n  console.log(this.GetLaugisticModelArray);\n  }\n  GetOrderStatusId(OrderStatusId) {\n    // this.OrderStatus_Id = OrderStatusId;\n    //console.log(this.OrderStatus_Id);\n  }\n  GetOrderId(OrderId) {\n    //  this.Order_Id = OrderId;\n    // console.log(this.Order_Id);\n  }\n\n  GetOrderAndStatusfunction(orderId, UserStatus) {\n    this.OrderStatus_Id = this.Status_Name;\n    console.log(this.OrderStatus_Id);\n    this.GetOrderId = orderId;\n    console.log(this.GetOrderId);\n    jQuery(\"#snackbar\").html(\"Selected Row Successfully\");\n    this.myFunction();\n  }\n\n  pendingOrderFun() {\n\n  }\n\n  UpdateOrderStatus() {\n    this._UpdateOrderStatusService.UpdateOrderDetailService(this.OrderStatus_Id, this.GetOrderId).subscribe(\n      response => {\n        console.log(response);\n        var OrderIdchanged = response.data.Id;\n\n        var obj = this.GetAllProductModelArray.find(x=>x.Id == OrderIdchanged);\n        obj.OrderStatus = response.data.OrderStatus;\n        console.log(obj);\n      \n          if (obj.OrderStatus == 100) {\n\n            obj.OrderStatus =this.PENDING;\n\n          }\n          else if (obj.OrderStatus == 200) {\n\n            obj.OrderStatus  = this.ONTHEWAY;\n\n          }\n          else if (obj.OrderStatus  == 300) {\n            obj.OrderStatus  = this.DELIVERED;\n\n          }\n          else if (obj.OrderStatus == 400) {\n\n            obj.OrderStatus = this.CONFIRMED;\n\n          }\n          else if (obj.OrderStatus  == 500) {\n\n            obj.OrderStatus = this.SHIPPED;\n\n          }\n          else if (obj.OrderStatus == 600) {\n\n            obj.OrderStatus  = this.NOTSHIPPED;\n\n          }\n          else if (obj.OrderStatus  == 700) {\n\n            obj.OrderStatus  = this.CANCELED;\n\n          }\n          else if (obj.OrderStatus  == 800) {\n            obj.OrderStatus  = this.COMPLETED;\n          }\n          else if (obj.OrderStatus  == 900) {\n\n            obj.OrderStatus  = this.RETURNED;\n\n          }\n          else if (obj.OrderStatus  == 10) {\n\n            obj.OrderStatus  = this.TOBEDELIVERED;\n\n          }\n          else {\n\n            alert(\"Not Available\");\n          }\n         \n\n     \n     \n      });\n  }\n  GetLaugisticId(LougisticId) {\n    this.Lougistic_Id = LougisticId;\n  }\n\n  myFunction() {\n    // Get the snackbar DIV\n    var x = document.getElementById(\"snackbar\")\n\n    // Add the \"show\" class to DIV\n    x.className = \"show\";\n\n    // After 3 seconds, remove the show class from DIV\n    setTimeout(function () { x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/UpdateOrderStatus/UpdateOrderStatus.component.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { UpdateOrderStatusComponent } from './UpdateOrderStatus.component';\r\n\r\nexport const routes = [\r\n  { path: '', component:UpdateOrderStatusComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UpdateOrderStatusComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes),\r\n  ]\r\n})\r\nexport default class UpdateOrderStatusModule {\r\n  static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/UpdateOrderStatus/UpdateOrderStatus.module.ts","module.exports = \"/***********************************/\\n/**             LOGIN             **/\\n/***********************************/\\n.login-page {\\n  background-color: #ddd; }\\n\\n.login-page .page-footer {\\n  margin-bottom: 25px;\\n  font-size: 13px;\\n  color: #818a91;\\n  text-align: center; }\\n  @media (min-height: 600px) {\\n    .login-page .page-footer {\\n      position: absolute;\\n      bottom: 0;\\n      left: 0;\\n      right: 0; } }\\n\\n.btn {\\n  color: white !important;\\n  display: inline-block;\\n  margin-left: 12px; }\\n\\n.widget-login-container {\\n  padding-top: 10%; }\\n\\n.widget-login-logo {\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n  text-align: center;\\n  font-weight: 400; }\\n  .widget-login-logo .fa-circle {\\n    font-size: 13px;\\n    margin: 0 20px; }\\n\\n.widget-login {\\n  padding: 30px; }\\n  .widget-login > header h1, .widget-login > header h2, .widget-login > header h3, .widget-login > header h4, .widget-login > header h5, .widget-login > header h6 {\\n    font-weight: 400;\\n    text-align: center; }\\n\\n.widget-login-info {\\n  font-size: 13px;\\n  color: #888;\\n  margin-top: 1px;\\n  margin-bottom: 0;\\n  text-align: center; }\\n  .widget-login-info.abc-checkbox {\\n    margin-left: -25px; }\\n\\n.login-form .form-control {\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef; }\\n  .login-form .form-control:focus {\\n    background-color: #ddd; }\\n\\n.updateStatus {\\n  width: 542px; }\\n\\n.dropbtn {\\n  background-color: #4CAF50;\\n  color: white;\\n  padding: 16px;\\n  font-size: 16px;\\n  border: none;\\n  cursor: pointer; }\\n\\n.dropdown {\\n  position: relative;\\n  display: inline-block;\\n  height: 50px;\\n  margin-bottom: 13px; }\\n\\n.dropdown-content {\\n  display: none;\\n  position: absolute;\\n  background-color: #f9f9f9;\\n  min-width: 160px;\\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\n  z-index: 1; }\\n\\n.dropdown-content a {\\n  color: black;\\n  padding: 12px 16px;\\n  text-decoration: none;\\n  display: block; }\\n\\n.dropdown-content a:hover {\\n  background-color: #f1f1f1; }\\n\\n.dropdown:hover .dropdown-content {\\n  display: block; }\\n\\n.dropdown:hover .dropbtn {\\n  background-color: #3e8e41; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/UpdateOrderStatus/UpdateOrderStatus.style.scss\n// module id = ./src/app/UpdateOrderStatus/UpdateOrderStatus.style.scss\n// module chunks = 13","module.exports = \"<div id=\\\"snackbar\\\"></div>\\r\\n<div class=\\\"container\\\">\\r\\n  <main id=\\\"content\\\" class=\\\"widget-login-container\\\" role=\\\"main\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n\\r\\n        <h5 class=\\\"widget-login-logo animated fadeInUp\\\">\\r\\n         \\r\\n        </h5>\\r\\n        <section class=\\\"widget widget-login updateStatus animated fadeInUp\\\">\\r\\n          <header>\\r\\n            <h3 style=\\\"text-transform:uppercase;\\\">Update Order Status</h3>\\r\\n          </header>\\r\\n          <div class=\\\"widget-body\\\">\\r\\n            <p class=\\\"widget-login-info\\\">\\r\\n\\r\\n            </p>\\r\\n            <p class=\\\"widget-login-info\\\">\\r\\n\\r\\n            </p>\\r\\n            <form class=\\\"login-form mt-lg\\\">\\r\\n           \\r\\n          \\r\\n              <table class=\\\"table table-hover\\\">\\r\\n\\r\\n                <tr>\\r\\n\\r\\n                  <td style=\\\"font-weight:600;color:#cccc\\\">Name</td>\\r\\n                  <td style=\\\"font-weight:600;color:#cccc\\\">Order Status</td>\\r\\n                  <td style=\\\"font-weight:600;color:#cccc\\\">OrderTotal</td>\\r\\n                </tr>\\r\\n\\r\\n                <ng-container *ngFor=\\\" let row1 of GetAllProductModelArray\\\">\\r\\n                  <tr  (click)=GetOrderAndStatusfunction(row1.Id,row1.OrderStatus)> \\r\\n                    \\r\\n                    <td >{{row1.User.UserName}}</td>\\r\\n                    <td>{{row1.OrderStatus}}</td>\\r\\n                    <td>{{row1.OrderTotal}}</td>\\r\\n                    \\r\\n                    <select class=\\\"dropdown\\\"(change)=\\\"getStatusCategory($event.target.value)\\\" >\\r\\n                       \\r\\n                        <option disabled selected value> -- select an option -- </option>\\r\\n                        <option value=\\\"100\\\">PENDING</option>\\r\\n                        <option value=\\\"200\\\">ONTHEWAY</option>\\r\\n                        <option value=\\\"300\\\">DELIVERED</option>\\r\\n                        <option value=\\\"400\\\">CONFIRMED</option>\\r\\n                        <option value=\\\"500\\\">SHIPPED</option>\\r\\n                        <option value=\\\"600\\\">NOT SHIPPED</option>\\r\\n                        <option value=\\\"700\\\">CANCELED</option>\\r\\n                        <option value=\\\"800\\\">COMPLETED</option>    \\r\\n                        <option value=\\\"900\\\">RETURNED</option>\\r\\n                        <option value=\\\"10\\\">TOBEDELIVERED</option>\\r\\n                                               \\r\\n                   </select> \\r\\n                   <td class=\\\"btn btn-inverse btn-sm\\\" (click)=\\\"UpdateOrderStatus()\\\">Update</td>\\r\\n</tr>\\r\\n\\r\\n                </ng-container>\\r\\n\\r\\n              </table>\\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <div class=\\\"btn-toolbar pull-xs-right m-t-1\\\">\\r\\n                  <!--   <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\">Create an Account</button> -->\\r\\n             \\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row m-t-1\\\">\\r\\n                <div class=\\\"col-md-6 push-md-6\\\">\\r\\n                  <div class=\\\"clearfix\\\">\\r\\n                   \\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </section>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </main>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/UpdateOrderStatus/UpdateOrderStatus.template.html\n// module id = ./src/app/UpdateOrderStatus/UpdateOrderStatus.template.html\n// module chunks = 13","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class GetLaugisticService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n  \r\n    GetLaugisticName()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Logistics/getAllLogistics\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    AddLaugisticData(Lougistic_Id,username,password,fullName)\r\n    {\r\n        let body = JSON.stringify({ LogisticsId: Lougistic_Id,UserName:username, Password: password,FullName:fullName});\r\n        console.log(body);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'post', headers: headers });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"Logistics/addLogisticUser\", body, options)\r\n            .map(res => res.json());\r\n    }\r\n    GetAllCitiesService()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"City/getAllCities\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    getDataByCities(cityId)\r\n    {\r\n        \r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getChemistsListByCity?CityId=\"+cityId, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n\r\n    \r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/GetLaugisticService.ts","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class GetOrderService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n  \r\n    GetOrderDetailService(Status_Value)\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getOrdersByOrderStatus?orderStatus=\"+Status_Value, options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    GetOrderDetailValueService()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getOrdersByOrderStatus?orderStatus=100\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    GetAllCitiesService()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"City/getAllCities\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    getDataByCities(cityId)\r\n    {\r\n        \r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getChemistsListByCity?CityId=\"+cityId, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n\r\n    \r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/GetOrderService.ts","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class PendingOrderService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    GetPendingOrder()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllChemists?webRequest=1\", options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n    GetOrderDetailService()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllChemists?webRequest=1\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    AddLaugisticData(OrderId,LogisticId)\r\n    {\r\n        let body = JSON.stringify({ OrderId: OrderId, LogisticsId: LogisticId});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'post', headers: headers });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"Admin/assignOrderToLogistics\", body, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n    getDataByCities(cityId)\r\n    {\r\n        \r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getChemistsListByCity?CityId=\"+cityId, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n\r\n    \r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/PendingOrderService.ts","import { Injectable, Inject } from '@angular/core';\nexport class ServiceUrl {\n   public baseUrl: string = \"https://pharmaappnew.azurewebsites.net/api/\";\n/*    public baseUrl:string = \"http://localhost:5000/\";*/\n/* public baseUrl: string = \"http://104.199.49.55:3000/\";*/\n    constructor() {\n\n    }\n    getUrl() {\n        return this.baseUrl;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/ServiceUrl.ts","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class UpdateOrderStatusService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    UpdateOrderDetailService(OrderStatus_Id,GetOrderId)\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"logistics/updateOrder?orderId=\"+GetOrderId+\"&orderStatus=\"+OrderStatus_Id, options)\r\n           .map(res => res.json());   \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/UpdateOrderStatusService.ts"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AAcA;AAiCA;AAAA;AAAA;AAAA;AAAA;AA7BA;AACA;AACA;AACA;AAaA;AAcjPA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA4OA;;AAAA;AA3OA;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAYA;AAAA;AAEA;AADA;AAXA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;AAAA;AAFA;AAEA;;;;;;;;ACvBA;;;;;;;ACAA;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AAjDA;AAAA;;AAAA;AAqDA;;AAAA;AApDA;;;;;;;;;;ACLA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AAlDA;AAAA;;AAAA;AAsDA;;AAAA;AArDA;;;;;;;;;;ACLA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AA/CA;AAAA;;AAAA;AAmDA;;AAAA;AAlDA;;;;;;;;;;ACJA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;;;;;;ACDA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAdA;AAAA;;AAAA;AAeA;;AAAA;AAdA;;;;;","sourceRoot":""}