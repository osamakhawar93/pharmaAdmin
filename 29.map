{"version":3,"file":"29.chunk.js","sources":["webpack:///./src/app/GetOrder/GetOrder.component.ts","webpack:///./src/app/GetOrder/GetOrder.module.ts","webpack:///./src/app/GetOrder/GetOrder.style.scss","webpack:///./src/app/GetOrder/GetOrder.template.html","webpack:///./src/app/services/GetOrderService.ts?2e8e*","webpack:///./src/app/services/ServiceUrl.ts?08bc****************"],"sourcesContent":["import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { GetChemistDataModel } from '../models/GetChemistDataModel'\r\nimport { DosageSizesAndValueModel } from '../models/DosageSizesAndValueModel'\r\nimport { GetAllProductService } from '../services/GetAllProductService';\r\nimport { GetOrderService } from '../services/GetOrderService';\r\nimport { GetAllProductModel } from '../models/GetAllProductModel';\r\nimport { GetOrderDetailModel } from '../models/GetOrderDetailModel';\r\n\r\n@Component({\r\n  selector: 'GetOrder',\r\n  providers: [GetOrderService],\r\n  styles: [require('./GetOrder.style.scss')],\r\n  template: require('./GetOrder.template.html'),\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    class: 'dosage-page app'\r\n  },\r\n})\r\nexport class GetOrderComponent {\r\n  router: Router;\r\n  public UserType: any;\r\n  public MedicineDescription: any;\r\n  public MedicineName: any;\r\n  public ChemistId: any;\r\n  public ProductType: any;\r\n  public GetAllProductModelArray: GetAllProductModel[] = [];\r\n  public GetOrderDetailModelArray: GetOrderDetailModel[] = [];\r\n  public GetOrderDetailModelOrderStatus: GetOrderDetailModel[] = [];\r\n  public GetAllProductModelArraySingle: GetAllProductModel[] = [];\r\n  public GetAllProductDosageValue: GetAllProductModel[] = [];\r\n  public GetChemistDataModelArray: GetChemistDataModel[] = [];\r\n  public PENDING: any;\r\n  public ONTHEWAY: any;\r\n  public DELIVERED: any;\r\n  public CONFIRMED: any;\r\n  public SHIPPED: any;\r\n  public NOTSHIPPED: any;\r\n  public CANCELED: any;\r\n  public COMPLETED: any;\r\n  public RETURNED: any;\r\n  public TOBEDELIVERED: any;\r\n  public Status_Value: any;\r\n\r\n  constructor(public _addMedicineService: GetOrderService, router: Router) {\r\n    this.UserType = localStorage.getItem(\"UserType\");\r\n    if (this.UserType == null) {\r\n      this.router.navigate([\"/app/login\"]);\r\n\r\n    }\r\n    else {\r\n      this.router = router;\r\n    }\r\n  }\r\n  getStatusValue(status) {\r\n    this.Status_Value = status;\r\n\r\n\r\n    this.ProductType = 100;\r\n    this.ChemistId = localStorage.getItem(\"GetChemistId\");\r\n    this.PENDING = \"Pending\";\r\n    this.ONTHEWAY = \"On The way\";\r\n    this.DELIVERED = \"Delivered\";\r\n    this.CONFIRMED = \"Confirmed\";\r\n    this.SHIPPED = \"Shipped\";\r\n    this.NOTSHIPPED = \"Not Shipped\";\r\n    this.CANCELED = \"Canceled\";\r\n    this.COMPLETED = \"Completed\";\r\n    this.RETURNED = \"Returned\";\r\n    this.TOBEDELIVERED = \"To Be Delivered\";\r\n\r\n\r\n\r\n    this._addMedicineService.GetOrderDetailService(this.Status_Value).subscribe(\r\n      response => {\r\n        console.log(response.data);\r\n\r\n        this.GetOrderDetailModelArray = response.data;\r\n        console.log('Order Status', this.GetOrderDetailModelArray);\r\n        for (var i = 0; i < response.data.length; i++) {\r\n          if (this.GetOrderDetailModelArray[i].OrderStatus == 100) {\r\n\r\n            this.GetOrderDetailModelArray[i].OrderStatus = this.PENDING;\r\n\r\n          }\r\n          else if (this.GetOrderDetailModelArray[i].OrderStatus == 200) {\r\n\r\n            this.GetOrderDetailModelArray[i].OrderStatus = this.ONTHEWAY;\r\n\r\n          }\r\n          else if (this.GetOrderDetailModelArray[i].OrderStatus == 300) {\r\n            this.GetOrderDetailModelArray[i].OrderStatus = this.DELIVERED;\r\n\r\n          }\r\n          else if (this.GetOrderDetailModelArray[i].OrderStatus == 400) {\r\n\r\n            this.GetOrderDetailModelArray[i].OrderStatus = this.CONFIRMED;\r\n\r\n          }\r\n          else if (this.GetOrderDetailModelArray[i].OrderStatus == 500) {\r\n\r\n            this.GetOrderDetailModelArray[i].OrderStatus = this.SHIPPED;\r\n\r\n          }\r\n          else if (this.GetOrderDetailModelArray[i].OrderStatus == 600) {\r\n\r\n            this.GetOrderDetailModelArray[i].OrderStatus = this.NOTSHIPPED;\r\n\r\n          }\r\n          else if (this.GetOrderDetailModelArray[i].OrderStatus == 700) {\r\n\r\n            this.GetOrderDetailModelArray[i].OrderStatus = this.CANCELED;\r\n\r\n          }\r\n          else if (this.GetOrderDetailModelArray[i].OrderStatus == 800) {\r\n            this.GetOrderDetailModelArray[i].OrderStatus = this.COMPLETED;\r\n          }\r\n          else if (this.GetOrderDetailModelArray[i].OrderStatus == 900) {\r\n\r\n            this.GetOrderDetailModelArray[i].OrderStatus = this.RETURNED;\r\n\r\n          }\r\n          else if (this.GetOrderDetailModelArray[i].OrderStatus == 10) {\r\n\r\n            this.GetOrderDetailModelArray[i].OrderStatus = this.TOBEDELIVERED;\r\n\r\n          }\r\n          else {\r\n\r\n            alert(\"Not Available\");\r\n          }\r\n        }\r\n\r\n      });\r\n  }\r\n\r\n\r\n  myFunction() {\r\n    // Get the snackbar DIV\r\n    var x = document.getElementById(\"snackbar1\")\r\n\r\n    // Add the \"show\" class to DIV\r\n    x.className = \"show\";\r\n\r\n    // After 3 seconds, remove the show class from DIV\r\n    setTimeout(function () { x.className = x.className.replace(\"show\", \"\"); }, 3000);\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/GetOrder/GetOrder.component.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { GetOrderComponent } from './GetOrder.component';\r\n\r\nexport const routes = [\r\n  { path: '', component:GetOrderComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GetOrderComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes),\r\n  ]\r\n})\r\nexport default class GetOrderModule {\r\n  static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/GetOrder/GetOrder.module.ts","module.exports = \".login-page {\\n  background-color: #ddd; }\\n\\n.login-page .page-footer {\\n  margin-bottom: 25px;\\n  font-size: 13px;\\n  color: #818a91;\\n  text-align: center; }\\n  @media (min-height: 600px) {\\n    .login-page .page-footer {\\n      position: absolute;\\n      bottom: 0;\\n      left: 0;\\n      right: 0; } }\\n\\n#StatusName {\\n  background-color: #eceeef;\\n  color: black;\\n  padding: 16px;\\n  font-size: 16px;\\n  border: none;\\n  cursor: pointer;\\n  width: 273px;\\n  height: 53px; }\\n\\n#MedicineCategory {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 139px;\\n  margin-left: 29px;\\n  margin-bottom: 14px; }\\n\\n.AddMeasurement {\\n  position: relative;\\n  color: white;\\n  text-align: center;\\n  background-color: grey;\\n  float: left; }\\n\\n#AddMeasurement button {\\n  background: none;\\n  border: 1px solid #ccc;\\n  padding: 8px;\\n  font-weight: bold;\\n  width: auto;\\n  display: inline-block;\\n  margin-right: 10px;\\n  margin-top: 10px; }\\n\\n.addbtn:hover {\\n  color: white !important; }\\n\\n#MedicineDosage {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 139px;\\n  margin-left: 37px; }\\n\\n#dosageValue {\\n  margin-bottom: 12px;\\n  border: 1px solid black;\\n  padding-top: 12px;\\n  padding-bottom: 12px; }\\n\\n#SelectDosageValue {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 126px;\\n  margin-left: 2px; }\\n\\n#MedicineMeasurement {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 158px;\\n  margin-left: 11px;\\n  margin-top: -5px; }\\n\\n.addbtnMeasurement {\\n  background-color: white;\\n  width: 124px !important;\\n  height: 30px;\\n  margin-left: 22px; }\\n\\n#MedicineSubCategory {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 167px;\\n  margin-left: 25px; }\\n\\n#measurementName {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 100%;\\n  margin-bottom: 14px; }\\n\\n.addbtn {\\n  width: 235px;\\n  color: white !important; }\\n\\n.widget-login-container {\\n  padding-top: 10%; }\\n\\n.widget-login-logo {\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n  text-align: center;\\n  font-weight: 400; }\\n  .widget-login-logo .fa-circle {\\n    font-size: 13px;\\n    margin: 0 20px; }\\n\\n.widget-login {\\n  padding: 30px; }\\n  .widget-login > header h1, .widget-login > header h2, .widget-login > header h3, .widget-login > header h4, .widget-login > header h5, .widget-login > header h6 {\\n    font-weight: 400;\\n    text-align: center; }\\n\\n.widget-login-info {\\n  font-size: 13px;\\n  color: #888;\\n  margin-top: 1px;\\n  margin-bottom: 0;\\n  text-align: center; }\\n  .widget-login-info.abc-checkbox {\\n    margin-left: -25px; }\\n\\n.login-form .form-control {\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef; }\\n  .login-form .form-control:focus {\\n    background-color: #ddd; }\\n\\n#snackbar1 {\\n  visibility: hidden;\\n  /* Hidden by default. Visible on click */\\n  min-width: 250px;\\n  /* Set a default minimum width */\\n  margin-left: -125px;\\n  /* Divide value of min-width by 2 */\\n  background-color: #333;\\n  /* Black background color */\\n  color: #fff;\\n  /* White text color */\\n  text-align: center;\\n  /* Centered text */\\n  border-radius: 2px;\\n  /* Rounded borders */\\n  padding: 16px;\\n  /* Padding */\\n  position: fixed;\\n  /* Sit on top of the screen */\\n  z-index: 1;\\n  /* Add a z-index if needed */\\n  left: 50%;\\n  /* Center the snackbar */\\n  bottom: 30px;\\n  /* 30px from the bottom */ }\\n\\n#SelectMeasurement {\\n  display: inline-flex;\\n  margin-bottom: 3px; }\\n\\n#SelectDosage {\\n  display: inline-block; }\\n\\n#SelectCategory {\\n  display: inline-flex; }\\n\\n#SelectSubCategory {\\n  display: inline-flex; }\\n\\n.AddMedicine {\\n  max-width: 600px;\\n  min-width: 300px;\\n  margin: 0 auto; }\\n\\n.AddDosage {\\n  width: 297px; }\\n\\n.AddSize {\\n  width: 297px; }\\n\\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\\n#snackbar1.show {\\n  visibility: visible;\\n  /* Show the snackbar */\\n  /* Add animation: Take 0.5 seconds to fade in and out the snackbar. \\r\\nHowever, delay the fade out process for 2.5 seconds */\\n  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\\n  animation: fadein 0.5s, fadeout 0.5s 2.5s; }\\n\\n/* Animations to fade the snackbar in and out */\\n@-webkit-keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0; }\\n  to {\\n    bottom: 30px;\\n    opacity: 1; } }\\n\\n@keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0; }\\n  to {\\n    bottom: 30px;\\n    opacity: 1; } }\\n\\n@-webkit-keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1; }\\n  to {\\n    bottom: 0;\\n    opacity: 0; } }\\n\\n@keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1; }\\n  to {\\n    bottom: 0;\\n    opacity: 0; } }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/GetOrder/GetOrder.style.scss\n// module id = ./src/app/GetOrder/GetOrder.style.scss\n// module chunks = 29","module.exports = \"<div id=\\\"snackbar\\\"></div>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <main id=\\\"content\\\" class=\\\"widget-login-container\\\" role=\\\"main\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <h5 class=\\\"widget-login-logo animated  fadeInUp\\\">\\r\\n      \\r\\n      </h5>\\r\\n      <section class=\\\"widget widget-login AddMedicine animated fadeInUp\\\">\\r\\n        <header>\\r\\n          <h3 style=\\\"text-transform:uppercase;\\\">Order List</h3>\\r\\n        </header>\\r\\n        <div class=\\\"widget-body\\\">\\r\\n          <p class=\\\"widget-login-info\\\">\\r\\n\\r\\n          </p>\\r\\n          <p class=\\\"widget-login-info\\\">\\r\\n\\r\\n          </p>\\r\\n          <form class=\\\"login-form mt-lg\\\">\\r\\n            <select id=\\\"StatusName\\\"(change)=\\\"getStatusValue($event.target.value)\\\">\\r\\n\\r\\n              <option disabled selected value> -- select an option -- </option>\\r\\n              <option value=\\\"100\\\">Pending </option>\\r\\n              <option value=\\\"200\\\">On The way </option>\\r\\n              <option value=\\\"300\\\">Delivered </option>\\r\\n              <option value=\\\"400\\\">Confirmed </option>\\r\\n              <option value=\\\"500\\\">Shipped </option>\\r\\n              <option value=\\\"600\\\">Not Shipped </option>\\r\\n              <option value=\\\"700\\\">Canceled </option>\\r\\n              <option value=\\\"800\\\">Completed </option>\\r\\n              <option value=\\\"900\\\">Returned </option>\\r\\n              <option value=\\\"10\\\">To Be Delivered </option>\\r\\n\\r\\n             \\r\\n          \\r\\n      \\r\\n         </select>\\r\\n\\r\\n            <table class=\\\"table table-hover\\\">\\r\\n\\r\\n              <tr>\\r\\n\\r\\n                <td>Name</td>\\r\\n                <td>Order Status</td>\\r\\n                <td>OrderTotal</td>\\r\\n              </tr>\\r\\n\\r\\n              <ng-container *ngFor=\\\" let row1 of GetOrderDetailModelArray\\\">\\r\\n                <tr>\\r\\n                  <td>{{row1.User.UserName}}</td>\\r\\n                  <td>{{row1.OrderStatus}}</td>\\r\\n                  <td>{{row1.OrderTotal}}</td>\\r\\n\\r\\n\\r\\n\\r\\n                </tr>\\r\\n\\r\\n                <!-- <td > {{row2.User.UserName}}</td>\\r\\n                        <td>{{row2.Chemist.City}}</td>\\r\\n                        <td>{{row22.Chemist.Latitude}}</td> -->\\r\\n\\r\\n\\r\\n              </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            </table>\\r\\n            <div class=\\\"clearfix\\\">\\r\\n           \\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          </form>\\r\\n        </div>\\r\\n      </section>\\r\\n\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/GetOrder/GetOrder.template.html\n// module id = ./src/app/GetOrder/GetOrder.template.html\n// module chunks = 29","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class GetOrderService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n  \r\n    GetOrderDetailService(Status_Value)\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getOrdersByOrderStatus?orderStatus=\"+Status_Value, options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    GetOrderDetailValueService()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getOrdersByOrderStatus?orderStatus=100\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    GetAllCitiesService()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"City/getAllCities\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    getDataByCities(cityId)\r\n    {\r\n        \r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getChemistsListByCity?CityId=\"+cityId, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n\r\n    \r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/GetOrderService.ts","import { Injectable, Inject } from '@angular/core';\nexport class ServiceUrl {\n   public baseUrl: string = \"https://pharmaappnew.azurewebsites.net/api/\";\n/*    public baseUrl:string = \"http://localhost:5000/\";*/\n/* public baseUrl: string = \"http://104.199.49.55:3000/\";*/\n    constructor() {\n\n    }\n    getUrl() {\n        return this.baseUrl;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/ServiceUrl.ts"],"mappings":";;;;;;;AAAA;AACA;AAKA;AAcA;AAyBA;AAAA;AAlBA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAzIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAiIA;;AAAA;AAhIA;;;;;;;;;;ACpBA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAYA;AAAA;AAEA;AADA;AAXA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;AAAA;AAFA;AAEA;;;;;;;;ACvBA;;;;;;;ACAA;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AAlDA;AAAA;;AAAA;AAsDA;;AAAA;AArDA;;;;;;;;;;ACJA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;","sourceRoot":""}