{"version":3,"file":"31.chunk.js","sources":["webpack:///./src/app/GetChemist/GetChemist.component.ts","webpack:///./src/app/GetChemist/GetChemist.module.ts","webpack:///./src/app/GetChemist/GetChemist.style.scss","webpack:///./src/app/GetChemist/GetChemist.template.html","webpack:///./src/app/services/GetChemistDataService.ts?8644***","webpack:///./src/app/services/ServiceUrl.ts?af2c*****************"],"sourcesContent":["import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AddCategoryService } from './../services/AddCategoryService';\r\nimport { GetChemistDataService } from './../services/GetChemistDataService';\r\nimport { GetChemistDataModel } from './../models/GetChemistDataModel';\r\nimport { chemistModel } from './../models/chemistModel'\r\ndeclare var jQuery: any;\r\n@Component({\r\n  selector: 'GetChemist',\r\n  providers: [GetChemistDataService],\r\n  styles: [require('./GetChemist.style.scss')],\r\n  template: require('./GetChemist.template.html'),\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    class: 'chemist-page app'\r\n  },\r\n})\r\n\r\nexport class GetChemistComponent {\r\n  router: Router;\r\n  public AllChemistDataModelCity: GetChemistDataModel[] = [];\r\n  public AllChemistDataModel: GetChemistDataModel[] = [];\r\n  public SingleChemistModel: chemistModel[] = [];\r\n  public ChemistName: any;\r\n  public ChemistId: any;\r\n  public ChemistEmail: any;\r\n  public ChemistPassword: any;\r\n  public Longitude: any;\r\n  public RegularExpression: any;\r\n  public Latitude: any;\r\n  public getCityId: any;\r\n  public UserType: any;\r\n  constructor(public _getChemistDataService: GetChemistDataService, router: Router) {\r\n    this.UserType = localStorage.getItem(\"UserType\");\r\n    if (this.UserType == null) {\r\n      this.router.navigate([\"/app/login\"]);\r\n\r\n    }\r\n    else {\r\n      this.router = router;\r\n\r\n\r\n      this._getChemistDataService.GetAllCitiesService().subscribe(\r\n        response => {\r\n\r\n          this.AllChemistDataModelCity = response.data;\r\n\r\n\r\n        });\r\n\r\n      console.log('City Name', this.AllChemistDataModelCity);\r\n    }\r\n\r\n  }\r\n\r\n  getCityName(CityId) {\r\n\r\n    this.getCityId = CityId;\r\n    console.log(this.getCityId);\r\n    var obj = this.AllChemistDataModel.find(x => x.Chemist.CityId == this.getCityId);\r\n    this.ChemistId = obj;\r\n    this._getChemistDataService.GetRegisteredChemistService().subscribe(\r\n      response => {\r\n        console.log(response.data);\r\n        this.AllChemistDataModel = [];\r\n        for (var i = 0; i < response.data.length; i++) {\r\n          if (response.data[i].Chemist.CityId == this.getCityId) {\r\n\r\n            this.AllChemistDataModel.push(response.data[i]);\r\n          }\r\n        }\r\n\r\n      });\r\n\r\n    console.log(this.AllChemistDataModel);\r\n\r\n  }\r\n\r\n\r\n  myFunction() {\r\n    // Get the snackbar DIV\r\n    var x = document.getElementById(\"snackbar\")\r\n\r\n    // Add the \"show\" class to DIV\r\n    x.className = \"show\";\r\n\r\n    // After 3 seconds, remove the show class from DIV\r\n    setTimeout(function () { x.className = x.className.replace(\"show\", \"\"); }, 3000);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/GetChemist/GetChemist.component.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { GetChemistComponent } from './GetChemist.component';\r\nimport \"jquery-locationpicker/src/locationpicker.jquery\";\r\n\r\nexport const routes = [\r\n  { path: '', component: GetChemistComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GetChemistComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes),\r\n    \r\n  ]\r\n})\r\nexport default class GetChemistModule {\r\n  static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/GetChemist/GetChemist.module.ts","module.exports = \".login-page {\\n  background-color: #ddd; }\\n\\n.hide {\\n  visibility: hidden; }\\n\\n.login-page .page-footer {\\n  margin-bottom: 25px;\\n  font-size: 13px;\\n  color: #818a91;\\n  text-align: center; }\\n  @media (min-height: 600px) {\\n    .login-page .page-footer {\\n      position: absolute;\\n      bottom: 0;\\n      left: 0;\\n      right: 0; } }\\n\\n#us7-lat {\\n  width: 237px; }\\n\\n#us7-lon {\\n  width: 237px; }\\n\\n#us7-radius {\\n  width: 260px; }\\n\\n#us7-address {\\n  width: 260px; }\\n\\n#measurementName {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 100%;\\n  margin-bottom: 14px; }\\n\\n#CityName {\\n  width: 100%;\\n  height: 30px;\\n  background-color: #eceeef;\\n  margin-bottom: 13px; }\\n\\n.AddMedicine {\\n  max-width: 987px;\\n  min-width: 300px;\\n  margin: 0 auto; }\\n\\n.addbtn {\\n  width: 235px;\\n  color: white !important; }\\n\\n.widget-login-container {\\n  padding-top: 10%; }\\n\\n.widget-login-logo {\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n  text-align: center;\\n  font-weight: 400; }\\n  .widget-login-logo .fa-circle {\\n    font-size: 13px;\\n    margin: 0 20px; }\\n\\n.widget-login {\\n  padding: 30px; }\\n  .widget-login > header h1, .widget-login > header h2, .widget-login > header h3, .widget-login > header h4, .widget-login > header h5, .widget-login > header h6 {\\n    font-weight: 400;\\n    text-align: center; }\\n\\n.widget-login-info {\\n  font-size: 13px;\\n  color: #888;\\n  margin-top: 1px;\\n  margin-bottom: 0;\\n  text-align: center; }\\n  .widget-login-info.abc-checkbox {\\n    margin-left: -25px; }\\n\\n.login-form .form-control {\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef; }\\n  .login-form .form-control:focus {\\n    background-color: #ddd; }\\n\\n#snackbar1 {\\n  visibility: hidden;\\n  /* Hidden by default. Visible on click */\\n  min-width: 250px;\\n  /* Set a default minimum width */\\n  margin-left: -125px;\\n  /* Divide value of min-width by 2 */\\n  background-color: #333;\\n  /* Black background color */\\n  color: #fff;\\n  /* White text color */\\n  text-align: center;\\n  /* Centered text */\\n  border-radius: 2px;\\n  /* Rounded borders */\\n  padding: 16px;\\n  /* Padding */\\n  position: fixed;\\n  /* Sit on top of the screen */\\n  z-index: 1;\\n  /* Add a z-index if needed */\\n  left: 50%;\\n  /* Center the snackbar */\\n  bottom: 30px;\\n  /* 30px from the bottom */ }\\n\\nagm-map {\\n  height: 300px; }\\n\\n.AddDosage {\\n  width: 297px; }\\n\\n.AddSize {\\n  width: 297px; }\\n\\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\\n#snackbar1.show {\\n  visibility: visible;\\n  /* Show the snackbar */\\n  /* Add animation: Take 0.5 seconds to fade in and out the snackbar. \\r\\nHowever, delay the fade out process for 2.5 seconds */\\n  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\\n  animation: fadein 0.5s, fadeout 0.5s 2.5s; }\\n\\n/* Animations to fade the snackbar in and out */\\n@-webkit-keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0; }\\n  to {\\n    bottom: 30px;\\n    opacity: 1; } }\\n\\n@keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0; }\\n  to {\\n    bottom: 30px;\\n    opacity: 1; } }\\n\\n@-webkit-keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1; }\\n  to {\\n    bottom: 0;\\n    opacity: 0; } }\\n\\n@keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1; }\\n  to {\\n    bottom: 0;\\n    opacity: 0; } }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/GetChemist/GetChemist.style.scss\n// module id = ./src/app/GetChemist/GetChemist.style.scss\n// module chunks = 31","module.exports = \"<div id=\\\"snackbar\\\"></div>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <main id=\\\"content\\\" class=\\\"widget-login-container\\\" role=\\\"main\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n  \\r\\n        <h5 class=\\\"widget-login-logo animated  fadeInUp\\\">\\r\\n      \\r\\n        </h5>\\r\\n        <section class=\\\"widget widget-login AddMedicine animated fadeInUp\\\">\\r\\n          <header>\\r\\n            <h3 style=\\\"text-transform:uppercase;\\\"> Nearby Chemist</h3>\\r\\n          </header>\\r\\n          <div class=\\\"widget-body\\\">\\r\\n            <p class=\\\"widget-login-info\\\">\\r\\n             \\r\\n            </p>\\r\\n            <p class=\\\"widget-login-info\\\">\\r\\n           \\r\\n            </p>\\r\\n            <form class=\\\"login-form mt-lg\\\">\\r\\n                <select id=\\\"CityName\\\"(change)=\\\"getCityName($event.target.value)\\\">\\r\\n                    <option disabled selected value> -- select an option -- </option>\\r\\n                \\r\\n             <option *ngFor=\\\"let pharmacyName of AllChemistDataModelCity\\\" value=\\\"{{pharmacyName.Id}}\\\">{{pharmacyName.Name}}</option>\\r\\n               </select>\\r\\n              \\r\\n            \\r\\n            \\r\\n              \\r\\n               \\r\\n             \\r\\n               \\r\\n              <table class=\\\"table table-hover\\\">\\r\\n                  \\r\\n                      <tr>\\r\\n                          <td>Pharmacy Name</td>\\r\\n                          <td>Email</td>\\r\\n                          <td>Name</td>\\r\\n                          <td>Address</td>\\r\\n                          <td>City</td>\\r\\n                          <td>Latitude</td>\\r\\n                          <td>Longitude</td>\\r\\n                          <td>Mobile Number</td>\\r\\n                      </tr>\\r\\n                     \\r\\n                    <tr  *ngFor=\\\" let row1 of AllChemistDataModel\\\">\\r\\n                     \\r\\n                        <td>{{row1.Chemist.PharmacyName}}</td>\\r\\n                        <td>{{row1.Email}}</td>\\r\\n                        <td>{{row1.UserName}}</td>\\r\\n                        <td>{{row1.Chemist.Address}}</td>\\r\\n                        <td>{{row1.Chemist.City.Name}}</td>\\r\\n                        <td>{{row1.Chemist.Latitude}}</td>\\r\\n                        <td>{{row1.Chemist.Longitude}}</td>\\r\\n                        <td>{{row1.MobileNumber}}</td>\\r\\n                       \\r\\n\\r\\n                    </tr>\\r\\n                  \\r\\n                     \\r\\n                  \\r\\n                  \\r\\n              </table> \\r\\n              <div class=\\\"clearfix\\\">\\r\\n                \\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n              \\r\\n               </form>\\r\\n              </div>\\r\\n             </section>\\r\\n     \\r\\n        </div>\\r\\n  </main>\\r\\n      </div>\\r\\n    \\r\\n  \\r\\n  \\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/GetChemist/GetChemist.template.html\n// module id = ./src/app/GetChemist/GetChemist.template.html\n// module chunks = 31","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class GetChemistDataService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    GetRegisteredChemistService()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllChemists?webRequest=1\", options)\r\n            .map(res => {\r\n                console.log(res.json());\r\n                return res.json();\r\n            });\r\n            }\r\n            getSubCategoryService()\r\n            {\r\n                let body = JSON.stringify({});\r\n                let headers = new Headers({ 'Content-Type': 'application/json' });\r\n                let options = new RequestOptions({ method: 'get', headers: headers });\r\n        \r\n                return this.http.get(this.urlService.baseUrl + \"Chemist/getSubCategoriesByChemistIdByCategoryId?chemistId=1&categoryId=1\", options)\r\n                    .map(res => {\r\n                        console.log(res.json());\r\n                        return res.json();\r\n                    });\r\n              \r\n              \r\n            }\r\n    getDataByAreaIdService(AreadId)\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getChemistsListByArea?areaId\"+AreadId, options)\r\n            .map(res => {\r\n                console.log(res.json());\r\n                return res.json();\r\n            });\r\n\r\n\r\n    }\r\n  \r\n    GetChemistService()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getListOfPendingChemists\", options)\r\n            .map(res => {\r\n                console.log(res.json());\r\n                return res.json();\r\n            });\r\n\r\n\r\n    }\r\n    GetAllCitiesService()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"City/getAllCities\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    getDataByCities(cityId)\r\n    {\r\n        \r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getChemistsListByCity?CityId=\"+cityId, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n\r\n    \r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/GetChemistDataService.ts","import { Injectable, Inject } from '@angular/core';\nexport class ServiceUrl {\n   public baseUrl: string = \"https://pharmaappnew.azurewebsites.net/api/\";\n/*    public baseUrl:string = \"http://localhost:5000/\";*/\n/* public baseUrl: string = \"http://104.199.49.55:3000/\";*/\n    constructor() {\n\n    }\n    getUrl() {\n        return this.baseUrl;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/ServiceUrl.ts"],"mappings":";;;;;;;AAAA;AACA;AAEA;AAeA;AAcA;AAdA;AAcA;AAZA;AACA;AACA;AAWA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAGA;AAGA;AAEA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAjFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA8EA;;AAAA;AA5EA;;;;;;;;;;AClBA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAaA;AAAA;AAEA;AADA;AAZA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAAA;AAGA;AAAA;AAFA;AAEA;;;;;;;;ACzBA;;;;;;;ACAA;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AAlFA;AAAA;;AAAA;AAsFA;;AAAA;AArFA;;;;;;;;;;ACJA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;","sourceRoot":""}