{"version":3,"file":"25.chunk.js","sources":["webpack:///./src/app/AddSlot/AddSlot.component.ts","webpack:///./src/app/AddSlot/AddSlot.module.ts","webpack:///./src/app/AddSlot/AddSlot.style.scss","webpack:///./src/app/AddSlot/AddSlot.template.html","webpack:///./src/app/services/AddSlotService.ts","webpack:///./src/app/services/GetLaugisticService.ts?928f*","webpack:///./src/app/services/ServiceUrl.ts?08bc************"],"sourcesContent":["import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { GetLaugisticService } from '../services/GetLaugisticService';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport {GetLaugisticModel} from '../models/GetLaugisticModel';\r\nimport{AddSlotService} from '../services/AddSlotService';\r\n\r\n@Component({\r\n  selector: 'AddSlot',\r\n  styles: [ require('./AddSlot.style.scss') ],\r\n  template: require('./AddSlot.template.html'),\r\n  providers: [AddSlotService,GetLaugisticService],\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    class: 'login-page app'\r\n  }\r\n})\r\nexport class AddSlotComponent {\r\n  public isAdmin:boolean;\r\n  public isChemist:boolean;\r\n  public GetLaugisticModelArray:GetLaugisticModel[]=[];\r\n  public GetLaugisticModeldata:GetLaugisticModel[]=[];\r\n  public username:string;\r\n  public fullName:any;\r\n  public Chemistusername:any;\r\n  public Chemistpassword:any;\r\n  public password:string;\r\n  public router:Router;\r\n  public AdminUserType:any;\r\n  public ChemistUserType:any;\r\n  public Lougistic_Id:any;\r\n  public StartTime:any;\r\n  public EndingTime:any;\r\n  public UserType:any;\r\n\r\n\r\n  constructor(public _AddSlotService: AddSlotService, router: Router, ) {\r\n    this.UserType=localStorage.getItem(\"UserType\");\r\n    if(this.UserType==null)\r\n    {\r\n      this.router.navigate([\"/app/login\"]);\r\n    \r\n    }\r\n    else{\r\n    this.router = router;\r\n    this.username=undefined;\r\n    this.password=undefined;\r\n    }\r\n    \r\n  }\r\n  GetLaugisticId(LougisticId)\r\n  {\r\nthis.Lougistic_Id=LougisticId;\r\n  }\r\n  AddSlot()\r\n  {\r\n\r\n    this._AddSlotService.addUnitValues(this.StartTime,this.EndingTime).subscribe(\r\n      response => {\r\n      //  this.GetLaugisticModeldata = response.data;\r\n      console.log(response);\r\n        jQuery(\"#snackbar\").html(\"Add Slot Successfully\");\r\n      \r\n        this.myFunction();\r\n        this.StartTime=undefined;\r\n        this.EndingTime=undefined;\r\n        this.fullName=undefined;\r\n     \r\n      });\r\n      console.log(this.GetLaugisticModeldata);\r\n    \r\n  }\r\n\r\nmyFunction() {\r\n    // Get the snackbar DIV\r\n    var x = document.getElementById(\"snackbar\")\r\n\r\n    // Add the \"show\" class to DIV\r\n    x.className = \"show\";\r\n\r\n    // After 3 seconds, remove the show class from DIV\r\n    setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\r\n}\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/AddSlot/AddSlot.component.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AddSlotComponent } from './AddSlot.component';\r\n/* import \"jquery-locationpicker/src/locationpicker.jquery\"; */\r\n\r\nexport const routes = [\r\n  { path: '', component: AddSlotComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddSlotComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes),\r\n    \r\n  ]\r\n})\r\nexport default class AddSlotModule {\r\n  static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/AddSlot/AddSlot.module.ts","module.exports = \".login-page {\\n  background-color: #ddd; }\\n\\n.login-page .page-footer {\\n  margin-bottom: 25px;\\n  font-size: 13px;\\n  color: #818a91;\\n  text-align: center; }\\n  @media (min-height: 600px) {\\n    .login-page .page-footer {\\n      position: absolute;\\n      bottom: 0;\\n      left: 0;\\n      right: 0; } }\\n\\n#PharmacyName {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 100%;\\n  margin-bottom: 14px; }\\n\\n.btn {\\n  width: 100% !important; }\\n\\n#us7-lat {\\n  width: 237px; }\\n\\n#us7-lon {\\n  width: 237px; }\\n\\n#us7-radius {\\n  width: 260px; }\\n\\n#us7-address {\\n  width: 260px; }\\n\\n#measurementName {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 100%;\\n  margin-bottom: 14px; }\\n\\n.addbtn {\\n  width: 291px !important;\\n  color: white !important;\\n  position: relative;\\n  float: left;\\n  right: -2px;\\n  font-weight: bold;\\n  text-align: center;\\n  background-color: #1ec26b !important; }\\n\\n.widget-login-container {\\n  padding-top: 10%; }\\n\\n.widget-login-logo {\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n  text-align: center;\\n  font-weight: 400; }\\n  .widget-login-logo .fa-circle {\\n    font-size: 13px;\\n    margin: 0 20px; }\\n\\n.widget-login {\\n  padding: 30px; }\\n  .widget-login > header h1, .widget-login > header h2, .widget-login > header h3, .widget-login > header h4, .widget-login > header h5, .widget-login > header h6 {\\n    font-weight: 400;\\n    text-align: center; }\\n\\n.widget-login-info {\\n  font-size: 13px;\\n  color: #888;\\n  margin-top: 1px;\\n  margin-bottom: 0;\\n  text-align: center; }\\n  .widget-login-info.abc-checkbox {\\n    margin-left: -25px; }\\n\\n.login-form .form-control {\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef; }\\n  .login-form .form-control:focus {\\n    background-color: #ddd; }\\n\\n#snackbar1 {\\n  visibility: hidden;\\n  /* Hidden by default. Visible on click */\\n  min-width: 250px;\\n  /* Set a default minimum width */\\n  margin-left: -125px;\\n  /* Divide value of min-width by 2 */\\n  background-color: #333;\\n  /* Black background color */\\n  color: #fff;\\n  /* White text color */\\n  text-align: center;\\n  /* Centered text */\\n  border-radius: 2px;\\n  /* Rounded borders */\\n  padding: 16px;\\n  /* Padding */\\n  position: fixed;\\n  /* Sit on top of the screen */\\n  z-index: 1;\\n  /* Add a z-index if needed */\\n  left: 50%;\\n  /* Center the snackbar */\\n  bottom: 30px;\\n  /* 30px from the bottom */ }\\n\\nagm-map {\\n  height: 300px; }\\n\\n.AddDosage {\\n  width: 297px; }\\n\\n.AddSize {\\n  width: 297px; }\\n\\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\\n#snackbar1.show {\\n  visibility: visible;\\n  /* Show the snackbar */\\n  /* Add animation: Take 0.5 seconds to fade in and out the snackbar. \\r\\nHowever, delay the fade out process for 2.5 seconds */\\n  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\\n  animation: fadein 0.5s, fadeout 0.5s 2.5s; }\\n\\n/* Animations to fade the snackbar in and out */\\n@-webkit-keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0; }\\n  to {\\n    bottom: 30px;\\n    opacity: 1; } }\\n\\n@keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0; }\\n  to {\\n    bottom: 30px;\\n    opacity: 1; } }\\n\\n@-webkit-keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1; }\\n  to {\\n    bottom: 0;\\n    opacity: 0; } }\\n\\n@keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1; }\\n  to {\\n    bottom: 0;\\n    opacity: 0; } }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/AddSlot/AddSlot.style.scss\n// module id = ./src/app/AddSlot/AddSlot.style.scss\n// module chunks = 25","module.exports = \"<div id=\\\"snackbar\\\"></div>\\r\\n<div class=\\\"container\\\">\\r\\n  <main id=\\\"content\\\" class=\\\"widget-login-container\\\" role=\\\"main\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n        \\r\\n        <h5 class=\\\"widget-login-logo animated fadeInUp\\\">\\r\\n      \\r\\n        </h5>\\r\\n        <section class=\\\"widget widget-login animated fadeInUp\\\">\\r\\n          <header>\\r\\n            <h3 style=\\\"text-transform:uppercase;\\\">Add Time Slot</h3>\\r\\n          </header>\\r\\n          <div class=\\\"widget-body\\\">\\r\\n            <p class=\\\"widget-login-info\\\">\\r\\n             \\r\\n            </p>\\r\\n            <p class=\\\"widget-login-info\\\">\\r\\n            </p>\\r\\n            <form class=\\\"login-form mt-lg\\\">\\r\\n              \\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"StartTime\\\" name=\\\"StartTime\\\" id=\\\"exampleInputEmail\\\" placeholder=\\\"Enter Start Time\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input class=\\\"form-control\\\" id=\\\"pswd\\\" [(ngModel)]=\\\"EndingTime\\\" name=\\\"EndingTime\\\" type=\\\"text\\\" placeholder=\\\"Enter Ending Time\\\">\\r\\n              </div>\\r\\n            \\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <div class=\\\"btn-toolbar pull-xs-right m-t-1\\\">\\r\\n                <!--   <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\">Create an Account</button> -->\\r\\n                  <a class=\\\"addbtn btn-inverse btn-sm\\\"  (click)=\\\"AddSlot()\\\">Add</a>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row m-t-1\\\">\\r\\n                <div class=\\\"col-md-6 push-md-6\\\">\\r\\n                  <div class=\\\"clearfix\\\">\\r\\n                    <div class=\\\"abc-checkbox widget-login-info pull-xs-right\\\">\\r\\n                      <input type=\\\"checkbox\\\" id=\\\"checkbox1\\\" value=\\\"1\\\">\\r\\n                      <label for=\\\"checkbox1\\\">Keep me signed in </label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                \\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </section>\\r\\n      \\r\\n      </div>\\r\\n  \\r\\n      </div>\\r\\n  </main>\\r\\n \\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/AddSlot/AddSlot.template.html\n// module id = ./src/app/AddSlot/AddSlot.template.html\n// module chunks = 25","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class AddSlotService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n  \r\n    addUnitValues(unitId,dosagevalue)\r\n    {\r\n        let body = JSON.stringify({ StartingTime: unitId, EndingTime: dosagevalue });\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'post', headers: headers });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"Admin/addSlot\", body, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/AddSlotService.ts","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class GetLaugisticService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n  \r\n    GetLaugisticName()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Logistics/getAllLogistics\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    AddLaugisticData(Lougistic_Id,username,password,fullName)\r\n    {\r\n        let body = JSON.stringify({ LogisticsId: Lougistic_Id,UserName:username, Password: password,FullName:fullName});\r\n        console.log(body);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'post', headers: headers });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"Logistics/addLogisticUser\", body, options)\r\n            .map(res => res.json());\r\n    }\r\n    GetAllCitiesService()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"City/getAllCities\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    getDataByCities(cityId)\r\n    {\r\n        \r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getChemistsListByCity?CityId=\"+cityId, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n\r\n    \r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/GetLaugisticService.ts","import { Injectable, Inject } from '@angular/core';\nexport class ServiceUrl {\n   public baseUrl: string = \"https://pharmaappnew.azurewebsites.net/api/\";\n/*    public baseUrl:string = \"http://localhost:5000/\";*/\n/* public baseUrl: string = \"http://104.199.49.55:3000/\";*/\n    constructor() {\n\n    }\n    getUrl() {\n        return this.baseUrl;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/ServiceUrl.ts"],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;AAYA;AAmBA;AAAA;AAhBA;AACA;AAgBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AA3EA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAsEA;;AAAA;AArEA;;;;;;;;;;;AChBA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAaA;AAAA;AAEA;AADA;AAZA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAAA;AAGA;AAAA;AAFA;AAEA;;;;;;;;ACzBA;;;;;;;ACAA;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAhBA;AAAA;;AAAA;AAkBA;;AAAA;AAjBA;;;;;;;;;;ACLA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AAjDA;AAAA;;AAAA;AAqDA;;AAAA;AApDA;;;;;;;;;;ACJA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;","sourceRoot":""}