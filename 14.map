{"version":3,"file":"14.chunk.js","sources":["webpack:///./src/app/Medicine/Medicine.component.ts","webpack:///./src/app/Medicine/Medicine.module.ts","webpack:///./src/app/Medicine/Medicine.style.scss","webpack:///./src/app/Medicine/Medicine.template.html","webpack:///./src/app/models/MedicineModel.ts","webpack:///./src/app/models/PricePerQuantityModel.ts","webpack:///./src/app/services/AddMedicineService.ts","webpack:///./src/app/services/Adddosageservice.ts","webpack:///./src/app/services/ServiceUrl.ts?08bc**"],"sourcesContent":["import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AddMedicineService } from '../services/AddMedicineService';\r\nimport { AddDosageService } from '../services/Adddosageservice';\r\nimport { categoryModel } from '../models/categoryModel';\r\nimport { subcategoryModel } from '../models/subcategoryModel';\r\nimport { MeasurementModel } from '../models/MeasurementModel';\r\nimport { DosageModel } from '../models/DosageModel';\r\nimport { MedicineModel } from '../models/MedicineModel';\r\nimport { PricePerQuantityModel } from '../models/PricePerQuantityModel';\r\nimport { DosageSizesAndValueModel } from '../models/DosageSizesAndValueModel';\r\n\r\n@Component({\r\n  selector: 'Medicine',\r\n  providers: [AddMedicineService, AddDosageService],\r\n  styles: [require('./Medicine.style.scss')],\r\n  template: require('./Medicine.template.html'),\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    class: 'dosage-page app'\r\n  },\r\n})\r\nexport class MedicineComponent {\r\n  router: Router;\r\n  public MedicineDescription: any;\r\n  public MedicineName: any;\r\n  public ProductName: any;\r\n  public CategoryId: any;\r\n  public ManufacturedBy: any;\r\n  public MedicineModelSingle: MedicineModel[] = [];\r\n  public PricePerQuantityModelSingle: PricePerQuantityModel[] = [];\r\n  public SinglePricePerQuantityModel: PricePerQuantityModel;\r\n  public SingleMedicineModel: MedicineModel;\r\n  public DosageSizesAndValueModelArray1: DosageSizesAndValueModel[] = [];\r\n  public DosageSizesAndValueModelArray: any[] = [];\r\n  public ChemistId: any;\r\n  public MedicineMeasurementName: any;\r\n  public SubCategoryId: any;\r\n  public ProductQuantity: any;\r\n  public ProductPrice: any;\r\n  public DosageId: any;\r\n  public SelectMeasurementName: any;\r\n  public DosageSizesValuesId: any;\r\n  public dosagename: String;\r\n  public dosagevalue: any;\r\n  public DosageModel: DosageModel[];\r\n  public DosageUnitName: any;\r\n  public Image_URL: any;\r\n  public SelectNextMeasurement: any;\r\n  public MeasurementName: any;\r\n  public categoryModelArray: categoryModel[] = [];\r\n  public subCategoryModel: subcategoryModel[] = [];\r\n  public MeasurementModelArray: MeasurementModel[];\r\n  public tempObj1: MeasurementModel[] = [];\r\n  public tempObj: MeasurementModel[] = [];\r\n  public SelectedMeasurementModel: MeasurementModel[] = [];\r\n  public UserType: any;\r\n  constructor(public _addMedicineService: AddMedicineService, router: Router, public _addDosageService: AddDosageService) {\r\n    this.UserType = localStorage.getItem(\"UserType\");\r\n    if (this.UserType == null) {\r\n      this.router.navigate([\"/app/login\"]);\r\n\r\n    }\r\n    else {\r\n      this.router = router;\r\n\r\n      this.ChemistId = localStorage.getItem(\"GetChemistId\");\r\n      this._addMedicineService.getAllCategoryValues(this.ChemistId).subscribe(\r\n        response => {\r\n\r\n          for (var i = 0; i < response.data.length; i++) {\r\n\r\n            if (response.data[i].ParentId == 0) {\r\n\r\n              this.categoryModelArray.push(response.data[i]);\r\n              //this.categoryModelArray=();\r\n\r\n            }\r\n          }\r\n        });\r\n\r\n\r\n      console.log(this.categoryModelArray);\r\n\r\n      this._addMedicineService.getAllMeasurementValues().subscribe(\r\n        response => {\r\n\r\n          this.MeasurementModelArray = response.data;\r\n\r\n        });\r\n\r\n      this._addMedicineService.getAllDosageValues().subscribe(\r\n        response => {\r\n\r\n          this.DosageModel = response.data;\r\n\r\n        });\r\n    }\r\n\r\n  }\r\n  addsubCategory(name) {\r\n    this.SubCategoryId = name;\r\n    console.log(this.SubCategoryId);\r\n    this.ChemistId = localStorage.getItem(\"GetChemistId\");\r\n  }\r\n\r\n  getDosageSizesAndValues(DosageId) {\r\n    console.log(DosageId);\r\n    this.DosageId = DosageId;\r\n    this._addDosageService.getDosageValue(this.DosageId).subscribe(\r\n      response => {\r\n        console.log(response);\r\n        for (var i = 0; i < response.data.length; i++) {\r\n          if (response.data[i].DosageAndSizes.Id == this.DosageId) {\r\n            var dosageObject = {\r\n              Id: response.data[i].Id,\r\n              Value: response.data[i].Value\r\n            };\r\n            this.DosageSizesAndValueModelArray.push(dosageObject);\r\n          }\r\n        }\r\n\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n  populatePricePerQuantity() {\r\n    this.SinglePricePerQuantityModel = new PricePerQuantityModel();\r\n    this.SinglePricePerQuantityModel.Price = this.ProductPrice;\r\n    this.SinglePricePerQuantityModel.Quantity = this.ProductQuantity;\r\n    this.SinglePricePerQuantityModel.MeasurementId = this.SelectMeasurementName;\r\n    this.SinglePricePerQuantityModel.DosageAndSizesValuesId = this.DosageSizesValuesId;\r\n    this.PricePerQuantityModelSingle.push(this.SinglePricePerQuantityModel);\r\n    this.ProductPrice = undefined;\r\n    this.ProductQuantity = undefined;\r\n    this.SelectMeasurement = undefined;\r\n    this.DosageSizesValuesId = undefined;\r\n\r\n\r\n\r\n    jQuery(\"#snackbar1\").html(\"Measurement Add Successfully\");\r\n    this.myFunction();\r\n  }\r\n\r\n  addMedicine() {\r\n    this.SingleMedicineModel = new MedicineModel();\r\n    this.SingleMedicineModel.ChemistId = localStorage.getItem(\"GetChemistId\");;\r\n    this.SingleMedicineModel.Quantity = this.ProductQuantity;\r\n    this.SingleMedicineModel.Price = this.ProductPrice;\r\n    this.SingleMedicineModel.DosageSizeAndValues = this.DosageId;\r\n    this.SingleMedicineModel.SubCategoryId = this.SubCategoryId;\r\n    this.SingleMedicineModel.MedicineName = this.MedicineName;\r\n    this.SingleMedicineModel.ManufacturedBy = this.ManufacturedBy;\r\n    this.SingleMedicineModel.MeasurementModel = this.SelectedMeasurementModel;\r\n    this.SingleMedicineModel.Url = this.Image_URL;\r\n    this.MedicineModelSingle.push(this.SingleMedicineModel);\r\n\r\n    this._addMedicineService.AddMedicineAndDosageService(this.SingleMedicineModel, this.PricePerQuantityModelSingle).subscribe(\r\n      response => {\r\n        console.log(response);\r\n        jQuery(\"#snackbar1\").html(response.message);\r\n        this.myFunction();\r\n\r\n      });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  getDosageSizesAndValuesId(DosageSizesValuesId) {\r\n\r\n    var obj = this.DosageModel.find(x => x.Id = DosageSizesValuesId);\r\n    console.log(obj);\r\n    this.DosageUnitName = obj.UnitName;\r\n    this.DosageSizesValuesId = DosageSizesValuesId;\r\n\r\n\r\n\r\n  }\r\n\r\n  getMedicineCategoryId(CategoryId) {\r\n    this.CategoryId = CategoryId;\r\n    console.log(this.CategoryId);\r\n    this.ChemistId = localStorage.getItem(\"GetChemistId\");\r\n    this._addMedicineService.getSubcategoryByCategoryID(this.ChemistId, this.CategoryId).subscribe(\r\n      response => {\r\n        console.log(response);\r\n\r\n        for (var i = 0; i < response.data.length; i++) {\r\n          if (response.data[i].ParentId == this.CategoryId) {\r\n            console.log(response.data[i]);\r\n            this.subCategoryModel.push(response.data[i]);\r\n\r\n          }\r\n        }\r\n\r\n\r\n\r\n      });\r\n\r\n  }\r\n  SelectMedicineMeasurement(MedicineMeasurementName) {\r\n\r\n    //console.log(this.SelectMeasurementName);\r\n    this.SelectMeasurementName = MedicineMeasurementName;\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  addMeasurementName(MeasurementName) {\r\n    this.MeasurementName = MeasurementName;\r\n    this.SelectedMeasurementModel.push(this.MeasurementName);\r\n\r\n    /* this.tempObj.push(this.MeasurementModelArray.find(x => x.Id ==  this.MeasurementName));\r\n    console.log(this.tempObj);\r\n    */\r\n\r\n  }\r\n  SelectMeasurement() {\r\n    //this.SelectedMeasurementModel.push(this.SelectMeasurementName);\r\n    //this.tempObj.push(this.MeasurementModelArray.find(x => x.Id ==  this.MeasurementName));\r\n    console.log('SelectMeasurement this.tempObj: ', this.SelectedMeasurementModel, typeof this.tempObj);\r\n    jQuery(\"#snackbar1\").html(\"Add Meassurement Successfully\");\r\n    this.myFunction();\r\n    /*    this.tempObj1.push(this.tempObj); */\r\n  }\r\n\r\n  RemoveMeasurementValue(MeasurementName) {\r\n    console.log(MeasurementName);\r\n    var index = this.SelectedMeasurementModel.findIndex(x => x.Id == MeasurementName);\r\n    this.SelectedMeasurementModel.splice(index, 1);\r\n  }\r\n\r\n  myFunction() {\r\n    // Get the snackbar DIV\r\n    var x = document.getElementById(\"snackbar1\")\r\n\r\n    // Add the \"show\" class to DIV\r\n    x.className = \"show\";\r\n\r\n    // After 3 seconds, remove the show class from DIV\r\n    setTimeout(function () { x.className = x.className.replace(\"show\", \"\"); }, 3000);\r\n  }\r\n  changeimage(elem) {\r\n    this.readURL(elem);\r\n  }\r\n  readURL(input) {\r\n    HTMLElement input= document.getElementById('imgInp');\r\n    if (input.files && input.files[0]) {\r\n      var reader = new FileReader();\r\n      var self = this;\r\n      reader.onload = function (e) {\r\n        jQuery('#blah').attr('src', e.target.result);\r\n\r\n        let file = input.files[0];\r\n        self._addMedicineService.AddImage(file).subscribe(\r\n          response => {\r\n            console.log(response);\r\n\r\n\r\n            self.SingleMedicineModel = response.data;\r\n            self.Image_URL = self.SingleMedicineModel;\r\n          });\r\n      }\r\n\r\n      reader.readAsDataURL(input.files[0]);\r\n    }\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/Medicine/Medicine.component.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { MedicineComponent } from './Medicine.component';\r\n\r\nexport const routes = [\r\n  { path: '', component:MedicineComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MedicineComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes),\r\n  ]\r\n})\r\nexport default class MedicineModule {\r\n  static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/Medicine/Medicine.module.ts","module.exports = \".login-page {\\n  background-color: #ddd; }\\n\\n.login-page .page-footer {\\n  margin-bottom: 25px;\\n  font-size: 13px;\\n  color: #818a91;\\n  text-align: center; }\\n  @media (min-height: 600px) {\\n    .login-page .page-footer {\\n      position: absolute;\\n      bottom: 0;\\n      left: 0;\\n      right: 0; } }\\n\\nul .wizard {\\n  list-style-type: none; }\\n\\n.previous .btn {\\n  margin-top: 2px; }\\n\\n#MedicineCategory {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: white;\\n  width: 163px;\\n  margin-left: 49px;\\n  margin-bottom: 14px;\\n  margin-top: 22px; }\\n\\n.AddMeasurement {\\n  position: relative;\\n  color: white;\\n  text-align: center;\\n  background-color: grey;\\n  float: left; }\\n\\n#AddMeasurement button {\\n  background: none;\\n  border: 1px solid #ccc;\\n  padding: 8px;\\n  font-weight: bold;\\n  width: auto;\\n  display: inline-block;\\n  margin-right: 10px;\\n  margin-top: 10px; }\\n\\n.addbtn:hover {\\n  color: white !important; }\\n\\n#MedicineDosage {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: white;\\n  width: 162px;\\n  margin-left: 55px; }\\n\\n#SelectDosageValue {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: white;\\n  width: 162px;\\n  margin-left: 2px; }\\n\\n.addMeasurementbtn {\\n  text-align: center; }\\n\\n#MedicineMeasurement {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: white;\\n  width: 163px;\\n  margin-left: 17px;\\n  margin-bottom: 14px;\\n  margin-top: -6px; }\\n\\n.addbtnMeasurement {\\n  background-color: white;\\n  width: 124px !important;\\n  height: 30px;\\n  margin-left: 22px; }\\n\\n#MedicineSubCategory {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: white;\\n  width: 163px;\\n  margin-left: 24px;\\n  margin-bottom: 14px;\\n  margin-top: -6px; }\\n\\n#measurementName {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 100%;\\n  margin-bottom: 14px; }\\n\\n.addbtn {\\n  color: white !important;\\n  width: 235px;\\n  background-color: #1ec26b !important;\\n  border: 0 !important; }\\n\\n.widget-login-container {\\n  padding-top: 10%; }\\n\\n.widget-login-logo {\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n  text-align: center;\\n  font-weight: 400; }\\n  .widget-login-logo .fa-circle {\\n    font-size: 13px;\\n    margin: 0 20px; }\\n\\n.widget-login {\\n  padding: 30px; }\\n  .widget-login > header h1, .widget-login > header h2, .widget-login > header h3, .widget-login > header h4, .widget-login > header h5, .widget-login > header h6 {\\n    font-weight: 400;\\n    text-align: center; }\\n\\n.widget-login-info {\\n  font-size: 13px;\\n  color: #888;\\n  margin-top: 1px;\\n  margin-bottom: 0;\\n  text-align: center; }\\n  .widget-login-info.abc-checkbox {\\n    margin-left: -25px; }\\n\\n.login-form .form-control {\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef; }\\n  .login-form .form-control:focus {\\n    background-color: #ddd; }\\n\\n#snackbar1 {\\n  visibility: hidden;\\n  /* Hidden by default. Visible on click */\\n  min-width: 250px;\\n  /* Set a default minimum width */\\n  margin-left: -125px;\\n  /* Divide value of min-width by 2 */\\n  background-color: #333;\\n  /* Black background color */\\n  color: #fff;\\n  /* White text color */\\n  text-align: center;\\n  /* Centered text */\\n  border-radius: 2px;\\n  /* Rounded borders */\\n  padding: 16px;\\n  /* Padding */\\n  position: fixed;\\n  /* Sit on top of the screen */\\n  z-index: 1;\\n  /* Add a z-index if needed */\\n  left: 50%;\\n  /* Center the snackbar */\\n  bottom: 30px;\\n  /* 30px from the bottom */ }\\n\\n#SelectMeasurement {\\n  display: inline-flex;\\n  margin-bottom: 3px; }\\n\\n#SelectDosage {\\n  display: inline-block; }\\n\\n#SelectCategory {\\n  display: inline-flex; }\\n\\n#SelectSubCategory {\\n  display: inline-flex; }\\n\\n.AddMedicine {\\n  max-width: 600px;\\n  min-width: 300px;\\n  margin: 0 auto; }\\n\\n.AddDosage {\\n  width: 297px; }\\n\\n.AddSize {\\n  width: 297px; }\\n\\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\\n#snackbar1.show {\\n  visibility: visible;\\n  /* Show the snackbar */\\n  /* Add animation: Take 0.5 seconds to fade in and out the snackbar. \\r\\nHowever, delay the fade out process for 2.5 seconds */\\n  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\\n  animation: fadein 0.5s, fadeout 0.5s 2.5s; }\\n\\n/* Animations to fade the snackbar in and out */\\n@-webkit-keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0; }\\n  to {\\n    bottom: 30px;\\n    opacity: 1; } }\\n\\n@keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0; }\\n  to {\\n    bottom: 30px;\\n    opacity: 1; } }\\n\\n@-webkit-keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1; }\\n  to {\\n    bottom: 0;\\n    opacity: 0; } }\\n\\n@keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1; }\\n  to {\\n    bottom: 0;\\n    opacity: 0; } }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Medicine/Medicine.style.scss\n// module id = ./src/app/Medicine/Medicine.style.scss\n// module chunks = 14","module.exports = \"<div id=\\\"snackbar1\\\"></div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-xs-12\\\">\\r\\n    <section class=\\\"widget\\\" widget>\\r\\n      <header>\\r\\n        <div class=\\\"widget-controls\\\">\\r\\n\\r\\n        </div>\\r\\n      </header>\\r\\n      <div class=\\\"widget-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-8 col-xs-12\\\">\\r\\n\\r\\n            <h1 style=\\\"text-transform:uppercase;text-align:center;color:#1ec26b;\\\">Add Medicine</h1>\\r\\n\\r\\n            <div bootstrap-wizard data-height=\\\"444\\\" class=\\\"form-wizard\\\">\\r\\n              <ul class=\\\"nav-justified mb-sm nav nav-pills\\\">\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                  <a style=\\\"color:#1ec26b;\\\" class=\\\"nav-link\\\" href=\\\"#tab1\\\" data-toggle=\\\"tab\\\">\\r\\n                    <small>1.</small>\\r\\n                    Medicine Name</a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                  <a style=\\\"color:#1ec26b;\\\" class=\\\"nav-link\\\" href=\\\"#tab2\\\" data-toggle=\\\"tab\\\">\\r\\n                    <small>2.</small>\\r\\n                    Quantity </a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                  <a style=\\\"color:#1ec26b;\\\" class=\\\"nav-link\\\" href=\\\"#tab3\\\" data-toggle=\\\"tab\\\">\\r\\n                    <small>3.</small>\\r\\n                    Image</a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                  <a style=\\\"color:#1ec26b;\\\" class=\\\"nav-link\\\" href=\\\"#tab4\\\" data-toggle=\\\"tab\\\">\\r\\n                    <small>4.</small>\\r\\n                    Thank you!</a>\\r\\n                </li>\\r\\n              </ul>\\r\\n            \\r\\n              <div class=\\\"tab-content\\\">\\r\\n                <div class=\\\"tab-pane bg-gray-lighter\\\" id=\\\"tab1\\\">\\r\\n                  <form action='' method=\\\"POST\\\" data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\">\\r\\n                    <fieldset>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                     \\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <input type=\\\"text\\\" required=\\\"required\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MedicineName\\\" name=\\\"MedicineName\\\" id=\\\"exampleInputEmail1\\\"\\r\\n                            placeholder=\\\"Enter Medicine Name\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"manufacturedBy\\\">\\r\\n                          <input type=\\\"text\\\" required=\\\"required\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ManufacturedBy\\\" name=\\\"ManufacturedBy\\\" id=\\\"exampleInputEmail1\\\"\\r\\n                            placeholder=\\\"Enter Manufacturer Name\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n\\r\\n                          <div class=\\\"form-group\\\" id=\\\"SelectCategory\\\">\\r\\n\\r\\n                            <label style=\\\"margin-top: 29px;font-size: 12px;\\\">Select Category</label>\\r\\n\\r\\n                            <select id=\\\"MedicineCategory\\\" (change)=\\\"getMedicineCategoryId($event.target.value)\\\">\\r\\n                              <option disabled selected value> -- select an option -- </option>\\r\\n\\r\\n                              <option *ngFor=\\\"let Medicine of categoryModelArray\\\" value=\\\"{{Medicine.Id}}\\\">{{Medicine.CategoryName}}</option>\\r\\n                            </select>\\r\\n\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\" id=\\\"SelectSubCategory\\\">\\r\\n\\r\\n                            <label style=\\\"font-size: 12px;margin-left: -2px;\\\">Select Sub Category</label>\\r\\n                            <select id=\\\"MedicineSubCategory\\\" (change)=\\\"addsubCategory($event.target.value)\\\">\\r\\n                              <option disabled selected value> -- select an option -- </option>\\r\\n                              <option *ngFor=\\\"let Medicine of subCategoryModel\\\" value=\\\"{{Medicine.Id}}\\\">{{Medicine.CategoryName}}</option>\\r\\n\\r\\n                            </select>\\r\\n\\r\\n                          </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                          <div class=\\\"form-group\\\" id=\\\"SelectMeasurement\\\">\\r\\n\\r\\n                            <label style=\\\"font-size: 12px;\\\">Select Measurement</label>\\r\\n                            <select id=\\\"MedicineMeasurement\\\" (change)=\\\"addMeasurementName($event.target.value)\\\">\\r\\n                              <option disabled selected value> -- select an option -- </option>\\r\\n                              <option *ngFor=\\\"let Medicine of MeasurementModelArray\\\" value=\\\"{{Medicine.Id}}\\\">{{Medicine.MeasurementName}}</option>\\r\\n\\r\\n                            </select>\\r\\n\\r\\n\\r\\n\\r\\n                          </div>\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                              <a class=\\\"btn addbtn btn-inverse btn-sm\\\"data-toggle=\\\"tab\\\" href=\\\"#tab2\\\" (click)=\\\"SelectMeasurement()\\\">Add Measurement</a>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                      </div>\\r\\n\\r\\n                    </fieldset>\\r\\n                  </form>\\r\\n                </div>\\r\\n                <div class=\\\"tab-pane bg-gray-lighter\\\" id=\\\"tab2\\\">\\r\\n                  <form action='' method=\\\"POST\\\" data-parsley-priority-enabled=\\\"false\\\" novalidate=\\\"novalidate\\\">\\r\\n                    <fieldset>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n\\r\\n\\r\\n\\r\\n                        <div class=\\\"col-md-12\\\" id=\\\"dosageValue\\\">\\r\\n                          <div class=\\\"form-group\\\" id=\\\"SelectDosage\\\">\\r\\n\\r\\n                            <label style=\\\"font-size: 12px;\\\">SelectDosage</label>\\r\\n                            <select id=\\\"MedicineDosage\\\" (change)=\\\"getDosageSizesAndValues($event.target.value)\\\">\\r\\n                              <option disabled selected value> -- select an option -- </option>\\r\\n                              <option *ngFor=\\\"let Dosage of DosageModel\\\" value=\\\"{{Dosage.Id}}\\\">{{Dosage.UnitName}}</option>\\r\\n\\r\\n                            </select>\\r\\n                            <label style=\\\"font-size: 12px;\\\">Select Dosage Value</label>\\r\\n                            <select id=\\\"SelectDosageValue\\\" (change)=\\\"getDosageSizesAndValuesId($event.target.value)\\\">\\r\\n                              <option disabled selected value> -- select an option -- </option>\\r\\n                              <option *ngFor=\\\"let Dosage of DosageSizesAndValueModelArray\\\" value=\\\"{{Dosage.Id}}\\\">{{Dosage.Value}}</option>\\r\\n                            </select>\\r\\n                          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                          <div class=\\\"form-group\\\" id=\\\"SelectMeasurement\\\">\\r\\n                            <label style=\\\"font-size: 12px;\\\">Select Measurement</label>\\r\\n                            <select id=\\\"MedicineMeasurement\\\" (change)=\\\"SelectMedicineMeasurement($event.target.value)\\\">\\r\\n                              <option disabled selected value> -- select an option -- </option>\\r\\n                              <option *ngFor=\\\"let Medicine of MeasurementModelArray\\\" value=\\\"{{Medicine.Id}}\\\">{{Medicine.MeasurementName}}</option>\\r\\n                            </select>\\r\\n                          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ProductQuantity\\\" name=\\\"ProductQuantity\\\" id=\\\"exampleInputEmail1\\\" placeholder=\\\"Enter Product Quantity\\\">\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ProductPrice\\\" name=\\\"ProductPrice\\\" id=\\\"exampleInputEmail1\\\" placeholder=\\\"Enter Product Price\\\">\\r\\n                          </div>\\r\\n                          <div class=\\\"addMeasurementbtn\\\">\\r\\n\\r\\n                            <a class=\\\"btn addbtn btn-inverse btn-sm\\\" (click)=\\\"populatePricePerQuantity()\\\">Add Measurements</a>\\r\\n                          </div>\\r\\n                         \\r\\n                        </div>\\r\\n\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"courier\\\">Choose shipping option</label>\\r\\n\\r\\n\\r\\n                        <table class=\\\"table table-hover\\\">\\r\\n\\r\\n                          <tr>\\r\\n                            <td>Dosage Value/Size</td>\\r\\n\\r\\n                            <td>Product Quantity</td>\\r\\n                            <td>Product Price</td>\\r\\n                          </tr>\\r\\n\\r\\n                          <tr *ngFor=\\\"let row of PricePerQuantityModelSingle\\\">\\r\\n                            <td>{{row.DosageAndSizesValuesId}}</td>\\r\\n\\r\\n                            <td>{{row.Quantity}}</td>\\r\\n                            <td>{{row.Price}}</td>\\r\\n\\r\\n                          </tr>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                        </table>\\r\\n\\r\\n                        <div class=\\\"addMeasurementbtn\\\">\\r\\n                            \\r\\n                              <a class=\\\"btn addbtn btn-inverse btn-sm\\\" data-toggle=\\\"tab\\\" href=\\\"#tab3\\\">Next</a>\\r\\n                             </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                      </div>\\r\\n\\r\\n\\r\\n                    </fieldset>\\r\\n                  </form>\\r\\n                </div>\\r\\n                <div class=\\\"tab-pane bg-gray-lighter\\\" id=\\\"tab3\\\">\\r\\n                  <form action='' method=\\\"POST\\\">\\r\\n                    <fieldset>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">Select Image</label>\\r\\n\\r\\n\\r\\n                        <form id=\\\"form1\\\" runat=\\\"server\\\">\\r\\n                          <input type='file' (change)=\\\"changeimage(event)\\\" id=\\\"imgInp\\\" />\\r\\n                          <img style=\\\"width:50%; height:50%\\\" id=\\\"blah\\\" src=\\\"#\\\" alt=\\\"your image\\\" />\\r\\n\\r\\n                        </form>\\r\\n                        <div class=\\\"btn-toolbar pull-xs-right m-t-1\\\">\\r\\n                          <!--   <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\">Create an Account</button> -->\\r\\n                          <a class=\\\"btn addbtn btn-inverse btn-sm\\\" data-toggle=\\\"tab\\\" href=\\\"#tab4\\\"(click)=\\\"addMedicine()\\\">Add</a>\\r\\n                        </div>\\r\\n\\r\\n                      </div>\\r\\n\\r\\n\\r\\n\\r\\n                    </fieldset>\\r\\n                  </form>\\r\\n                </div>\\r\\n                <div class=\\\"tab-pane bg-gray-lighter\\\" id=\\\"tab4\\\">\\r\\n                  <h2 class=\\\"m-t-1\\\">Thank you!</h2>\\r\\n\\r\\n                  <p>Your submission has been received.</p>\\r\\n                </div>\\r\\n                <ul style=\\\"list-style-type: none;\\\" class=\\\"pager wizard\\\">\\r\\n                  <li class=\\\"previous\\\">\\r\\n                 \\r\\n                  </li>\\r\\n                  <li class=\\\"next\\\"> \\r\\n                  </li>\\r\\n                  <li class=\\\"finish\\\" style=\\\"display: none\\\">\\r\\n                    <button class=\\\"btn btn-success btn-rounded pull-right\\\">\\r\\n                      Finish &nbsp;\\r\\n                      <i class=\\\"glyphicon glyphicon-ok\\\"></i>\\r\\n                    </button>\\r\\n                  </li>\\r\\n                </ul>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-4 col-xs-12\\\">\\r\\n           \\r\\n         \\r\\n            <div class=\\\"wizard\\\" bootstrap-application-wizard data-title=\\\"Create Server\\\">\\r\\n\\r\\n              <!-- Step 1 Name & FQDN -->\\r\\n              <div class=\\\"wizard-card\\\" data-cardname=\\\"name\\\">\\r\\n                \\r\\n\\r\\n                <div class=\\\"wizard-input-section\\\">\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                  \\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"wizard-input-section\\\">\\r\\n                 \\r\\n\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col-md-8 col-xs-12\\\">\\r\\n                      <div class=\\\"input-group\\\">\\r\\n                          \\r\\n                        <span class=\\\"input-group-btn\\\" id=\\\"btn-fqdn\\\">\\r\\n                          \\r\\n                        </span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"wizard-input-section\\\">\\r\\n                 \\r\\n\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                   \\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"wizard-card\\\" data-cardname=\\\"group\\\">\\r\\n              \\r\\n\\r\\n                <div class=\\\"wizard-input-section\\\">\\r\\n                 \\r\\n\\r\\n                  \\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"wizard-card wizard-card-overlay\\\" data-cardname=\\\"services\\\">\\r\\n              \\r\\n                \\r\\n\\r\\n                <div class=\\\"wizard-input-section\\\">\\r\\n                \\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"wizard-card wizard-card-overlay\\\" data-cardname=\\\"location\\\">\\r\\n           \\r\\n\\r\\n                <div class=\\\"wizard-input-section\\\">\\r\\n                \\r\\n\\r\\n                  \\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n             \\r\\n              <div class=\\\"wizard-card\\\">\\r\\n               \\r\\n\\r\\n                <div class=\\\"wizard-input-section\\\">\\r\\n                 \\r\\n\\r\\n                  <div class=\\\"btn-group\\\" dropdown>\\r\\n                 \\r\\n            \\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"wizard-input-section\\\">\\r\\n                 \\r\\n\\r\\n                \\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"wizard-error\\\">\\r\\n                 \\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"wizard-failure\\\">\\r\\n                  \\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"wizard-success\\\">\\r\\n                 \\r\\n\\r\\n                  \\r\\n                 \\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Medicine/Medicine.template.html\n// module id = ./src/app/Medicine/Medicine.template.html\n// module chunks = 14","import {MeasurementModel} from './MeasurementModel'\r\nimport {PricePerQuantityModel} from './PricePerQuantityModel'\r\nexport class MedicineModel {\r\n    ChemistId:any;\r\n    MedicineName: any;\r\n    ManufacturedBy:any;\r\n    Quantity: number;\r\n    Price: number;\r\n    DosageSizeAndValues: any;\r\n    CategoryId: number;\r\n    Url:any;\r\n    SubCategoryId: number;\r\n    MeasurementModel:MeasurementModel[];\r\n    PricePerQuantity:PricePerQuantityModel[]\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/models/MedicineModel.ts","export class PricePerQuantityModel{\r\n    DosageAndSizesValuesId:number;\r\n    Quantity: number;\r\n    Price: number;\r\n    MeasurementId:any;\r\n    MeasurementName:any;\r\n    \r\n    \r\n \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/models/PricePerQuantityModel.ts","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class AddMedicineService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n\r\n    getAllCategoryValues(categoryId) {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getCategoriesByChemistId?chemistId=\" + categoryId, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n    getAllSubCategoryValues() {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllCategoriesAndSubCategories\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    getAllDosageValues() {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllChemistUnits\", options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n    getSubcategoryByCategoryID(chemistId, categoryId) {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getSubCategoriesByChemistIdByCategoryId?chemistId=\" + chemistId + \"&categoryId=\" + categoryId, options)\r\n            .map(res => res.json());\r\n    }\r\n    getAllMeasurementValues() {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllChemistMeasurements\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    AddMedicineAndDosageService(SingleMedicineModel, PricePerQuantityModel) {\r\n\r\n\r\n\r\n        let body = JSON.stringify({ PictureURL:SingleMedicineModel.Url,ChemistId: SingleMedicineModel.ChemistId,ManufacturedBy:SingleMedicineModel.ManufacturedBy, DosageSizeAndValues: SingleMedicineModel.DosageSizeAndValues, Name: SingleMedicineModel.MedicineName, MeasurementIds: SingleMedicineModel.MeasurementModel, SubCategoryId: SingleMedicineModel.SubCategoryId, AddProductDaosageAndSizeMappingDTO: PricePerQuantityModel });\r\n        console.log(body);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'post', headers: headers });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"Chemist/addProduct\", body, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n    AddImage(file)\r\n    {\r\n\r\n        let formData: FormData = new FormData();\r\n        formData.append(\"file\", file, file.name);\r\nlet options = new RequestOptions({ method: 'post' });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"product/uploadProductImage\", formData, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/AddMedicineService.ts","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class AddDosageService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    getDosageValue(DosageId)\r\n    {\r\n        let body = JSON.stringify({Id:DosageId});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllUnitValues\", options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n    addunit(unitname, unitvalue) {\r\n        let body = JSON.stringify({ UnitName: unitname, UnitSymbol: unitvalue });\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'post', headers: headers });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"Chemist/addUnit\", body, options)\r\n            .map(res => res.json());\r\n    }\r\n    getAllUnitValues()\r\n    {\r\n        let body = JSON.stringify({});\r\n        console.log(body);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllChemistUnits\", options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n    addUnitValues(unitId,dosagevalue)\r\n    {\r\n        let body = JSON.stringify({ DosageAndSizesId: unitId, Value: dosagevalue });\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'post', headers: headers });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"Chemist/addUnitValue\", body, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/Adddosageservice.ts","import { Injectable, Inject } from '@angular/core';\nexport class ServiceUrl {\n   public baseUrl: string = \"https://pharmaappnew.azurewebsites.net/api/\";\n/*    public baseUrl:string = \"http://localhost:5000/\";*/\n/* public baseUrl: string = \"http://104.199.49.55:3000/\";*/\n    constructor() {\n\n    }\n    getUrl() {\n        return this.baseUrl;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/ServiceUrl.ts"],"mappings":";;;;;;;AAAA;AACA;AAEA;AACA;AAKA;AACA;AAaA;AAmCA;AAnCA;AAmCA;AAAA;AA5BA;AACA;AAGA;AACA;AAgBA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAEA;AAGA;AACA;AACA;AAGA;AAEA;AAGA;AAEA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAKA;AAIA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAtQA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA8PA;;AAAA;AA7PA;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAYA;AAAA;AAEA;AADA;AAXA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;AAAA;AAFA;AAEA;;;;;;;;ACvBA;;;;;;;ACAA;;;;;;;;;ACEA;AAAA;AAYA;AAAA;AAAA;AAZA;;;;;;;;;;ACFA;AAAA;AASA;AAAA;AAAA;AATA;;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AA3EA;AAAA;;AAAA;AA8EA;;AAAA;AA7EA;;;;;;;;;;ACLA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AA5CA;AAAA;;AAAA;AA8CA;;AAAA;AA7CA;;;;;;;;;;ACJA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;","sourceRoot":""}