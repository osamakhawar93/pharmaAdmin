{"version":3,"file":"16.chunk.js","sources":["webpack:///./src/app/GetProduct/GetProduct.component.ts","webpack:///./src/app/GetProduct/GetProduct.module.ts","webpack:///./src/app/GetProduct/GetProduct.style.scss","webpack:///./src/app/GetProduct/GetProduct.template.html","webpack:///./src/app/services/AddMedicineService.ts?06a8","webpack:///./src/app/services/AdddosageService.ts?545d","webpack:///./src/app/services/GetAllProductService.ts","webpack:///./src/app/services/GetCategoryAndSubcategoryService.ts","webpack:///./src/app/services/ServiceUrl.ts?af2c***"],"sourcesContent":["import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AddMedicineService } from './../services/AddMedicineService';\r\nimport { AddDosageService } from './../services/AdddosageService';\r\nimport { categoryModel } from './../models/categoryModel';\r\nimport { subcategoryModel } from './../models/subcategoryModel';\r\nimport { MeasurementModel } from './../models/MeasurementModel'\r\nimport { DosageModel } from './../models/DosageModel'\r\nimport { MedicineModel } from './../models/MedicineModel'\r\nimport { PricePerQuantityModel } from './../models/PricePerQuantityModel'\r\nimport {GetChemistDataModel} from './../models/GetChemistDataModel'\r\nimport { DosageSizesAndValueModel } from './../models/DosageSizesAndValueModel'\r\nimport { GetAllProductService } from './../services/GetAllProductService';\r\nimport {GetAllProductModel} from './../models/GetAllProductModel';\r\nimport {GetCategoryAndSubcategoryService} from './../services/GetCategoryAndSubcategoryService';\r\n@Component({\r\n  selector: 'GetProduct',\r\n  providers: [GetCategoryAndSubcategoryService,AddMedicineService, AddDosageService,GetAllProductService],\r\n  styles: [require('./GetProduct.style.scss')],\r\n  template: require('./GetProduct.template.html'),\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    class: 'dosage-page app'\r\n  },\r\n})\r\nexport class GetProductComponent {\r\n  router: Router;\r\n  public MedicineDescription: any;\r\n  public MedicineName: any;\r\n  public ChemistId:any;\r\n  public ProductType:any;\r\n  public UserType:any;\r\n  public GetAllProductModelArray:GetAllProductModel[]=[];\r\n  public GetAllProductModelArraySingle:GetAllProductModel[]=[];\r\n  public GetAllProductModelArrayDosage:GetAllProductModel[]=[];\r\n  public GetAllProductDosageValue:GetAllProductModel[]=[];\r\n  public GetChemistDataModelArray:GetChemistDataModel[]=[];\r\n\r\n  constructor(public _getChemistDataService: GetCategoryAndSubcategoryService,public _GetProductService: GetAllProductService, router: Router, public _addDosageService: AddDosageService) {\r\n    this.UserType=localStorage.getItem(\"UserType\");\r\n    if(this.UserType==null)\r\n    {\r\n      this.router.navigate([\"/app/login\"]);\r\n    \r\n    }\r\n    else{\r\n    this.router = router;\r\n    this.ProductType=100;\r\n\r\n    this._getChemistDataService.GetChemistService().subscribe(\r\n      response => {\r\n     for(var i=0;i<response.data.length; i++)\r\n     {\r\n        \r\n          this.GetChemistDataModelArray.push(response.data[i]);\r\n         \r\n        }   \r\n        jQuery(\"#snackbar1\").html(\"Show Pharmacacy Name  Successfully\");\r\n        this.myFunction();\r\n        console.log('Chemist array', this.GetChemistDataModelArray);\r\n     \r\n      });\r\n    }\r\n\r\n\r\n  }\r\n  \r\n  \r\n  \r\n  getProductName(PharmacyId)\r\n    {\r\n      console.log(\"Inside\");\r\n\r\n    this.ChemistId = PharmacyId;\r\n   console.log(this.ChemistId);\r\n    this._GetProductService.GetPharmacyNameService(this.ChemistId,this.ProductType).subscribe(\r\n      response => {\r\n      console.log(response.data);\r\n      \r\n       this.GetAllProductModelArraySingle=response.data;\r\n        console.log('chemistName',this.GetAllProductModelArraySingle);  \r\n       \r\n      });\r\n\r\n\r\n      this._GetProductService.getAllMedicineName(this.ChemistId,this.ProductType).subscribe(\r\n      response => {\r\n           console.log(this.GetAllProductModelArrayDosage);  \r\n      for(var i=0; i<response.data.length; i++)\r\n      {\r\n        if(response.data[i].Id==PharmacyId)\r\n      {\r\n       \r\n        \r\n        this.GetAllProductModelArrayDosage=response.data;\r\n     \r\n         \r\n      }\r\n      else{ \r\n        }\r\n        this.GetAllProductModelArrayDosage=[];\r\n\r\n      }\r\n\r\n    }); \r\n    \r\n\r\n  }\r\n  getSubCategoryName()\r\n  {\r\n\r\n  }\r\n\r\n  myFunction() {\r\n    // Get the snackbar DIV\r\n    var x = document.getElementById(\"snackbar1\")\r\n\r\n    // Add the \"show\" class to DIV\r\n    x.className = \"show\";\r\n\r\n    // After 3 seconds, remove the show class from DIV\r\n    setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\r\n}\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/GetProduct/GetProduct.component.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { GetProductComponent } from './GetProduct.component';\r\n\r\nexport const routes = [\r\n  { path: '', component:GetProductComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GetProductComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes),\r\n  ]\r\n})\r\nexport default class GetProductModule {\r\n  static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/GetProduct/GetProduct.module.ts","module.exports = \".login-page {\\n  background-color: #ddd; }\\n\\n.login-page .page-footer {\\n  margin-bottom: 25px;\\n  font-size: 13px;\\n  color: #818a91;\\n  text-align: center; }\\n  @media (min-height: 600px) {\\n    .login-page .page-footer {\\n      position: absolute;\\n      bottom: 0;\\n      left: 0;\\n      right: 0; } }\\n\\n#MedicineCategory {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 139px;\\n  margin-left: 29px;\\n  margin-bottom: 14px; }\\n\\n.AddMeasurement {\\n  position: relative;\\n  color: white;\\n  text-align: center;\\n  background-color: grey;\\n  float: left; }\\n\\n#AddMeasurement button {\\n  background: none;\\n  border: 1px solid #ccc;\\n  padding: 8px;\\n  font-weight: bold;\\n  width: auto;\\n  display: inline-block;\\n  margin-right: 10px;\\n  margin-top: 10px; }\\n\\n.addbtn:hover {\\n  color: white !important; }\\n\\n#MedicineDosage {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 139px;\\n  margin-left: 37px; }\\n\\n#dosageValue {\\n  margin-bottom: 12px;\\n  border: 1px solid black;\\n  padding-top: 12px;\\n  padding-bottom: 12px; }\\n\\n#SelectDosageValue {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 126px;\\n  margin-left: 2px; }\\n\\n#MedicineMeasurement {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 158px;\\n  margin-left: 11px;\\n  margin-top: -5px; }\\n\\n.addbtnMeasurement {\\n  background-color: white;\\n  width: 124px !important;\\n  height: 30px;\\n  margin-left: 22px; }\\n\\n#MedicineSubCategory {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 167px;\\n  margin-left: 25px; }\\n\\n#measurementName {\\n  height: 31px;\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef;\\n  width: 100%;\\n  margin-bottom: 14px; }\\n\\n.addbtn {\\n  width: 235px;\\n  color: white !important; }\\n\\n.widget-login-container {\\n  padding-top: 10%; }\\n\\n.widget-login-logo {\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n  text-align: center;\\n  font-weight: 400; }\\n  .widget-login-logo .fa-circle {\\n    font-size: 13px;\\n    margin: 0 20px; }\\n\\n.widget-login {\\n  padding: 30px; }\\n  .widget-login > header h1, .widget-login > header h2, .widget-login > header h3, .widget-login > header h4, .widget-login > header h5, .widget-login > header h6 {\\n    font-weight: 400;\\n    text-align: center; }\\n\\n.widget-login-info {\\n  font-size: 13px;\\n  color: #888;\\n  margin-top: 1px;\\n  margin-bottom: 0;\\n  text-align: center; }\\n  .widget-login-info.abc-checkbox {\\n    margin-left: -25px; }\\n\\n.login-form .form-control {\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef; }\\n  .login-form .form-control:focus {\\n    background-color: #ddd; }\\n\\n#snackbar1 {\\n  visibility: hidden;\\n  /* Hidden by default. Visible on click */\\n  min-width: 250px;\\n  /* Set a default minimum width */\\n  margin-left: -125px;\\n  /* Divide value of min-width by 2 */\\n  background-color: #333;\\n  /* Black background color */\\n  color: #fff;\\n  /* White text color */\\n  text-align: center;\\n  /* Centered text */\\n  border-radius: 2px;\\n  /* Rounded borders */\\n  padding: 16px;\\n  /* Padding */\\n  position: fixed;\\n  /* Sit on top of the screen */\\n  z-index: 1;\\n  /* Add a z-index if needed */\\n  left: 50%;\\n  /* Center the snackbar */\\n  bottom: 30px;\\n  /* 30px from the bottom */ }\\n\\n#SelectMeasurement {\\n  display: inline-flex;\\n  margin-bottom: 3px; }\\n\\n#SelectDosage {\\n  display: inline-block; }\\n\\n#SelectCategory {\\n  display: inline-flex; }\\n\\n#SelectSubCategory {\\n  display: inline-flex; }\\n\\n.AddMedicine {\\n  max-width: 600px;\\n  min-width: 300px;\\n  margin: 0 auto; }\\n\\n.AddDosage {\\n  width: 297px; }\\n\\n.AddSize {\\n  width: 297px; }\\n\\n#ProductName {\\n  width: 100%;\\n  height: 30px;\\n  background-color: #eceeef;\\n  margin-bottom: 13px; }\\n\\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\\n#snackbar1.show {\\n  visibility: visible;\\n  /* Show the snackbar */\\n  /* Add animation: Take 0.5 seconds to fade in and out the snackbar. \\r\\nHowever, delay the fade out process for 2.5 seconds */\\n  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\\n  animation: fadein 0.5s, fadeout 0.5s 2.5s; }\\n\\n/* Animations to fade the snackbar in and out */\\n@-webkit-keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0; }\\n  to {\\n    bottom: 30px;\\n    opacity: 1; } }\\n\\n@keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0; }\\n  to {\\n    bottom: 30px;\\n    opacity: 1; } }\\n\\n@-webkit-keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1; }\\n  to {\\n    bottom: 0;\\n    opacity: 0; } }\\n\\n@keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1; }\\n  to {\\n    bottom: 0;\\n    opacity: 0; } }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/GetProduct/GetProduct.style.scss\n// module id = ./src/app/GetProduct/GetProduct.style.scss\n// module chunks = 16","module.exports = \"<div id=\\\"snackbar\\\"></div>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <main id=\\\"content\\\" class=\\\"widget-login-container\\\" role=\\\"main\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n  \\r\\n        <h5 class=\\\"widget-login-logo animated  fadeInUp\\\">\\r\\n         \\r\\n        </h5>\\r\\n        <section class=\\\"widget widget-login AddMedicine animated fadeInUp\\\">\\r\\n          <header>\\r\\n            <h3 style=\\\"text-transform:uppercase;\\\">Products</h3>\\r\\n          </header>\\r\\n          <div class=\\\"widget-body\\\">\\r\\n            <p class=\\\"widget-login-info\\\">\\r\\n             \\r\\n            </p>\\r\\n            <p class=\\\"widget-login-info\\\">\\r\\n           \\r\\n            </p>\\r\\n            <form class=\\\"login-form mt-lg\\\">\\r\\n                <select id=\\\"ProductName\\\"(change)=\\\"getProductName($event.target.value)\\\">\\r\\n                    <option disabled selected value> -- select an option -- </option>\\r\\n                \\r\\n                    <option *ngFor=\\\"let MedicineName of GetChemistDataModelArray\\\" value=\\\"{{MedicineName.ChemistId}}\\\">{{MedicineName.Chemist.PharmacyName}}</option>\\r\\n\\r\\n                  </select>\\r\\n        \\r\\n              <table class=\\\"table table-hover\\\">\\r\\n                  \\r\\n                      <tr>\\r\\n                      \\r\\n                          <td>Dosage</td>\\r\\n                          <td>Value</td>\\r\\n                          <td>Measurement Name</td>\\r\\n                          <td>Quantity</td>\\r\\n                          <td>Price</td>\\r\\n                      </tr>\\r\\n                     \\r\\n                    <ng-container *ngFor=\\\" let row1 of GetAllProductModelArraySingle\\\">\\r\\n                     \\r\\n                       <p style=\\\"border: 1px solid black;font-weight: 600; text-align: center;\\\">{{row1.Name}}</p>\\r\\n                        <tr *ngFor=\\\"let row2 of row1.WebDosageAndValuesDTOList\\\">\\r\\n                        <td>{{row2.DosageName}}</td>\\r\\n                        <td>{{row2.DosageValue}}</td>\\r\\n                        <td>{{row2.MeasurementName}}</td>\\r\\n                        <td>{{row2.Quantity}}</td>\\r\\n                        <td>{{row2.Price}}</td>\\r\\n                      </tr>\\r\\n\\r\\n                    </ng-container>\\r\\n                  \\r\\n                     \\r\\n                  \\r\\n                  \\r\\n              </table> \\r\\n              <div class=\\\"clearfix\\\">\\r\\n                  \\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n              \\r\\n               </form>\\r\\n              </div>\\r\\n             </section>\\r\\n     \\r\\n        </div>\\r\\n  </main>\\r\\n      </div>\\r\\n    \\r\\n  \\r\\n  \\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/GetProduct/GetProduct.template.html\n// module id = ./src/app/GetProduct/GetProduct.template.html\n// module chunks = 16","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class AddMedicineService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n\r\n    getAllCategoryValues(categoryId) {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getCategoriesByChemistId?chemistId=\" + categoryId, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n    getAllSubCategoryValues() {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllCategoriesAndSubCategories\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    getAllDosageValues() {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllChemistUnits\", options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n    getSubcategoryByCategoryID(chemistId, categoryId) {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getSubCategoriesByChemistIdByCategoryId?chemistId=\" + chemistId + \"&categoryId=\" + categoryId, options)\r\n            .map(res => res.json());\r\n    }\r\n    getAllMeasurementValues() {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllChemistMeasurements\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n    AddMedicineAndDosageService(SingleMedicineModel, PricePerQuantityModel) {\r\n\r\n\r\n\r\n        let body = JSON.stringify({ PictureURL:SingleMedicineModel.Url,ChemistId: SingleMedicineModel.ChemistId,ManufacturedBy:SingleMedicineModel.ManufacturedBy, DosageSizeAndValues: SingleMedicineModel.DosageSizeAndValues, Name: SingleMedicineModel.MedicineName, MeasurementIds: SingleMedicineModel.MeasurementModel, SubCategoryId: SingleMedicineModel.SubCategoryId, AddProductDaosageAndSizeMappingDTO: PricePerQuantityModel });\r\n        console.log(body);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'post', headers: headers });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"Chemist/addProduct\", body, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n    AddImage(file)\r\n    {\r\n\r\n        let formData: FormData = new FormData();\r\n        formData.append(\"file\", file, file.name);\r\nlet options = new RequestOptions({ method: 'post' });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"product/uploadProductImage\", formData, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/AddMedicineService.ts","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class AddDosageService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    getDosageValue(DosageId)\r\n    {\r\n        let body = JSON.stringify({Id:DosageId});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllUnitValues\", options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n    addunit(unitname, unitvalue) {\r\n        let body = JSON.stringify({ UnitName: unitname, UnitSymbol: unitvalue });\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'post', headers: headers });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"Chemist/addUnit\", body, options)\r\n            .map(res => res.json());\r\n    }\r\n    getAllUnitValues()\r\n    {\r\n        let body = JSON.stringify({});\r\n        console.log(body);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllChemistUnits\", options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n    addUnitValues(unitId,dosagevalue)\r\n    {\r\n        let body = JSON.stringify({ DosageAndSizesId: unitId, Value: dosagevalue });\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'post', headers: headers });\r\n\r\n        return this.http.post(this.urlService.baseUrl + \"Chemist/addUnitValue\", body, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/AdddosageService.ts","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class GetAllProductService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    \r\n    getAllMedicineName(ChemistId,ProductType)\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllProductsByChemistId?ChemistId=\"+ChemistId+\"&ProductType=\"+ProductType, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n \r\n    GetPharmacyNameService(ChemistId,ProductType)\r\n    {\r\n       \r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllProductsByChemistId?ChemistId=\"+ChemistId+\"&ProductType=\"+ProductType, options)\r\n            .map(res => res.json());\r\n    \r\n    \r\n        \r\n    }\r\n\r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/GetAllProductService.ts","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ServiceUrl } from './ServiceUrl';\r\n@Injectable()\r\nexport class GetCategoryAndSubcategoryService {\r\n    urlService = new ServiceUrl();\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    GetSubCateogry()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllCategoriesAndSubCategories\", options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n    getCateogry(chemistId)\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getCategoriesByChemistId?chemistId=\"+chemistId, options)\r\n            .map(res => res.json());\r\n\r\n    }\r\n\r\n    GetChemistService()\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllChemists?webRequest=1\", options)\r\n            .map(res => res.json());\r\n\r\n\r\n    }\r\n\r\n    GetChemistCategoryService(ChemistId)\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getCategoriesByChemistId?chemistId=\"+ChemistId, options)\r\n            .map(res => res.json());\r\n    }\r\n  \r\n    GetProductCategoryService(ChemistId,ProductType)\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getAllProductsByChemistId?ChemistId=\"+ChemistId+\"&ProductType=\"+ProductType, options)\r\n            .map(res => res.json());\r\n    }\r\n    GetProducSubCategoryService(ChemistId,categoryId)\r\n    {\r\n        let body = JSON.stringify({});\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method: 'get', headers: headers });\r\n\r\n        return this.http.get(this.urlService.baseUrl + \"Chemist/getSubCategoriesByChemistIdByCategoryId?chemistId=\"+ChemistId+\"&categoryId=\"+categoryId, options)\r\n            .map(res => res.json());\r\n    \r\n    }\r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/GetCategoryAndSubcategoryService.ts","import { Injectable, Inject } from '@angular/core';\nexport class ServiceUrl {\n   public baseUrl: string = \"https://pharmaappnew.azurewebsites.net/api/\";\n/*    public baseUrl:string = \"http://localhost:5000/\";*/\n/* public baseUrl: string = \"http://104.199.49.55:3000/\";*/\n    constructor() {\n\n    }\n    getUrl() {\n        return this.baseUrl;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/ServiceUrl.ts"],"mappings":";;;;;;;AAAA;AACA;AAEA;AACA;AASA;AAEA;AAWA;AAaA;AAbA;AAaA;AAAA;AAAA;AANA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAIA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAGA;AAEA;AACA;AAEA;AAIA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AA3GA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAmGA;;AAAA;AAlGA;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAYA;AAAA;AAEA;AADA;AAXA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;AAAA;AAFA;AAEA;;;;;;;;ACvBA;;;;;;;ACAA;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AA3EA;AAAA;;AAAA;AA8EA;;AAAA;AA7EA;;;;;;;;;;ACLA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AA5CA;AAAA;;AAAA;AA8CA;;AAAA;AA7CA;;;;;;;;;;ACLA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AAIA;AA9BA;AAAA;;AAAA;AAiCA;;AAAA;AAhCA;;;;;;;;;;ACLA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAnEA;AAAA;;AAAA;AAqEA;;AAAA;AApEA;;;;;;;;;;ACJA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;","sourceRoot":""}